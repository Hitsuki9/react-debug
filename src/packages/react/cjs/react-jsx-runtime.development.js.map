{"version":3,"file":"react-jsx-runtime.development.js","sources":["../../../../packages/shared/ReactFeatureFlags.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/shared/getComponentNameFromType.js","../../../../packages/shared/ReactSharedInternals.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/shared/assign.js","../../../../packages/shared/CheckStringCoercion.js","../../../../packages/shared/isValidElementType.js","../../../../packages/shared/isArray.js","../../../../packages/shared/ConsolePatchingDev.js","../../../../packages/shared/DefaultPrepareStackTrace.js","../../../../packages/shared/ReactComponentStackFrame.js","../../../../packages/react/src/jsx/ReactJSXElement.js","../../../../packages/react/src/jsx/ReactJSX.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\n// -----------------------------------------------------------------------------\n// Land or remove (zero effort)\n//\n// Flags that can likely be deleted or landed without consequences\n// -----------------------------------------------------------------------------\n\nexport const enableComponentStackLocations = true;\n\n// -----------------------------------------------------------------------------\n// Killswitch\n//\n// Flags that exist solely to turn off a change in case it causes a regression\n// when it rolls out to prod. We should remove these as soon as possible.\n// -----------------------------------------------------------------------------\n\n// -----------------------------------------------------------------------------\n// Land or remove (moderate effort)\n//\n// Flags that can be probably deleted or landed, but might require extra effort\n// like migrating internal callers or performance testing.\n// -----------------------------------------------------------------------------\n\n// TODO: Finish rolling out in www\nexport const favorSafetyOverHydrationPerf = true;\nexport const enableAsyncActions = true;\n\n// Need to remove didTimeout argument from Scheduler before landing\nexport const disableSchedulerTimeoutInWorkLoop = false;\n\n// This will break some internal tests at Meta so we need to gate this until\n// those can be fixed.\nexport const enableDeferRootSchedulingToMicrotask = true;\n\n// TODO: Land at Meta before removing.\nexport const disableDefaultPropsExceptForClasses = true;\n\n// -----------------------------------------------------------------------------\n// Slated for removal in the future (significant effort)\n//\n// These are experiments that didn't work out, and never shipped, but we can't\n// delete from the codebase until we migrate internal callers.\n// -----------------------------------------------------------------------------\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n//\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\n//\n// This will eventually be replaced by the Transition Tracing proposal.\nexport const enableSuspenseCallback = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// Experimental Create Event Handle API.\nexport const enableCreateEventHandleAPI = false;\n\n// Support legacy Primer support on internal FB www\nexport const enableLegacyFBSupport = false;\n\n// -----------------------------------------------------------------------------\n// Ongoing experiments\n//\n// These are features that we're either actively exploring or are reasonably\n// likely to include in an upcoming release.\n// -----------------------------------------------------------------------------\n\nexport const enableCache = true;\nexport const enableLegacyCache = __EXPERIMENTAL__;\n\nexport const enableBinaryFlight = true;\nexport const enableFlightReadableStream = true;\nexport const enableAsyncIterableChildren = __EXPERIMENTAL__;\n\nexport const enableTaint = __EXPERIMENTAL__;\n\nexport const enablePostpone = __EXPERIMENTAL__;\n\nexport const enableHalt = __EXPERIMENTAL__;\n\n/**\n * Switches the Fabric API from doing layout in commit work instead of complete work.\n */\nexport const enableFabricCompleteRootInCommitPhase = false;\n\n/**\n * Switches Fiber creation to a simple object instead of a constructor.\n */\nexport const enableObjectFiber = false;\n\nexport const enableTransitionTracing = false;\n\nexport const enableLazyContextPropagation = true;\n\n// Expose unstable useContext for performance testing\nexport const enableContextProfiling = false;\n\n// FB-only usage. The new API has different semantics.\nexport const enableLegacyHidden = false;\n\n// Enables unstable_avoidThisFallback feature in Fiber\nexport const enableSuspenseAvoidThisFallback = false;\n// Enables unstable_avoidThisFallback feature in Fizz\nexport const enableSuspenseAvoidThisFallbackFizz = false;\n\nexport const enableCPUSuspense = __EXPERIMENTAL__;\n\n// Enables useMemoCache hook, intended as a compilation target for\n// auto-memoization.\nexport const enableUseMemoCacheHook = true;\n// Test this at Meta before enabling.\nexport const enableNoCloningMemoCache = false;\n\nexport const enableUseEffectEventHook = __EXPERIMENTAL__;\n\n// Test in www before enabling in open source.\n// Enables DOM-server to stream its instruction set as data-attributes\n// (handled with an MutationObserver) instead of inline-scripts\nexport const enableFizzExternalRuntime = __EXPERIMENTAL__;\n\nexport const alwaysThrottleRetries = true;\n\nexport const passChildrenWhenCloningPersistedNodes = false;\n\nexport const enableServerComponentLogs = true;\n\n/**\n * Enables a new Fiber flag used in persisted mode to reduce the number\n * of cloned host components.\n */\nexport const enablePersistedModeClonedFlag = false;\n\nexport const enableOwnerStacks = __EXPERIMENTAL__;\n\nexport const enableShallowPropDiffing = false;\n\nexport const enableSiblingPrerendering = true;\n\n/**\n * Enables an expiration time for retry lanes to avoid starvation.\n */\nexport const enableRetryLaneExpiration = false;\nexport const retryLaneExpirationMs = 5000;\nexport const syncLaneExpirationMs = 250;\nexport const transitionLaneExpirationMs = 5000;\n\n/**\n * Enables a new error detection for infinite render loops from updates caused\n * by setState or similar outside of the component owning the state.\n */\nexport const enableInfiniteRenderLoopDetection = false;\n\n/**\n * Experimental new hook for better managing resources in effects.\n */\nexport const enableUseResourceEffectHook = false;\n\n// -----------------------------------------------------------------------------\n// Ready for next major.\n//\n// Alias __NEXT_MAJOR__ to __EXPERIMENTAL__ for easier skimming.\n// -----------------------------------------------------------------------------\n\n// TODO: Anything that's set to `true` in this section should either be cleaned\n// up (if it's on everywhere, including Meta and RN builds) or moved to a\n// different section of this file.\n\n// const __NEXT_MAJOR__ = __EXPERIMENTAL__;\n\n// Renames the internal symbol for elements since they have changed signature/constructor\nexport const renameElementSymbol = true;\n\n/**\n * Enables a fix to run insertion effect cleanup on hidden subtrees.\n */\nexport const enableHiddenSubtreeInsertionEffectCleanup = false;\n\n/**\n * Removes legacy style context defined using static `contextTypes` and consumed with static `childContextTypes`.\n */\nexport const disableLegacyContext = true;\n/**\n * Removes legacy style context just from function components.\n */\nexport const disableLegacyContextForFunctionComponents = true;\n\n// Not ready to break experimental yet.\n// Modern <StrictMode /> behaviour aligns more with what components\n// components will encounter in production, especially when used With <Offscreen />.\n// TODO: clean up legacy <StrictMode /> once tests pass WWW.\nexport const useModernStrictMode = true;\n\n// Not ready to break experimental yet.\n// Remove IE and MsApp specific workarounds for innerHTML\nexport const disableIEWorkarounds = true;\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty\n// strings. This prevents e.g. <img src=\"\"> from making an unnecessary HTTP\n// request for certain browsers.\nexport const enableFilterEmptyStringAttributesDOM = true;\n\n// Enable the moveBefore() alternative to insertBefore(). This preserves states of moves.\nexport const enableMoveBefore = false;\n\n// Disabled caching behavior of `react/cache` in client runtimes.\nexport const disableClientCache = true;\n\n// Warn on any usage of ReactTestRenderer\nexport const enableReactTestRendererWarning = true;\n\n// Disables legacy mode\n// This allows us to land breaking changes to remove legacy mode APIs in experimental builds\n// before removing them in stable in the next Major\nexport const disableLegacyMode = true;\n\n// Make <Context> equivalent to <Context.Provider> instead of <Context.Consumer>\nexport const enableRenderableContext = true;\n\n// -----------------------------------------------------------------------------\n// Chopping Block\n//\n// Planned feature deprecations and breaking changes. Sorted roughly in order of\n// when we plan to enable them.\n// -----------------------------------------------------------------------------\n\n// -----------------------------------------------------------------------------\n// React DOM Chopping Block\n//\n// Similar to main Chopping Block but only flags related to React DOM. These are\n// grouped because we will likely batch all of them into a single major release.\n// -----------------------------------------------------------------------------\n\n// Disable support for comment nodes as React DOM containers. Already disabled\n// in open source, but www codebase still relies on it. Need to remove.\nexport const disableCommentsAsDOMContainers = true;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Prevent the value and checked attributes from syncing with their related\n// DOM properties\nexport const disableInputAttributeSyncing = false;\n\n// Disables children for <textarea> elements\nexport const disableTextareaChildren = false;\n\n// -----------------------------------------------------------------------------\n// Debugging and DevTools\n// -----------------------------------------------------------------------------\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in StrictLegacyMode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Adds performance.measure() marks using Chrome extensions to allow formatted\n// Component rendering tracks to show up in the Performance tab.\n// This flag will be used for both Server Component and Client Component tracks.\n// All calls should also be gated on enableProfilerTimer.\nexport const enableComponentPerformanceTrack = __EXPERIMENTAL__;\n\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental timeline tool.\nexport const enableSchedulingProfiler: boolean =\n  !enableComponentPerformanceTrack && __PROFILE__;\n\n// Record durations for commit and passive effects phases.\nexport const enableProfilerCommitHooks = __PROFILE__;\n\n// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\n\n// Adds verbose console logging for e.g. state updates, suspense, and work loop\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\nexport const enableDebugTracing = false;\n\nexport const enableAsyncDebugInfo = __EXPERIMENTAL__;\n\n// Track which Fiber(s) schedule render work.\nexport const enableUpdaterTracking = __PROFILE__;\n\n// Internal only.\nexport const enableGetInspectorDataForInstanceInProduction = false;\n\nexport const consoleManagedByDevToolsDuringStrictMode = true;\n\nexport const enableDO_NOT_USE_disableStrictPassiveEffect = false;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {renameElementSymbol} from 'shared/ReactFeatureFlags';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_LEGACY_ELEMENT_TYPE: symbol = Symbol.for('react.element');\nexport const REACT_ELEMENT_TYPE: symbol = renameElementSymbol\n  ? Symbol.for('react.transitional.element')\n  : REACT_LEGACY_ELEMENT_TYPE;\nexport const REACT_PORTAL_TYPE: symbol = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE: symbol = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE: symbol = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE: symbol = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE: symbol = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\nexport const REACT_CONSUMER_TYPE: symbol = Symbol.for('react.consumer');\nexport const REACT_CONTEXT_TYPE: symbol = Symbol.for('react.context');\nexport const REACT_FORWARD_REF_TYPE: symbol = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE: symbol = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE: symbol = Symbol.for(\n  'react.suspense_list',\n);\nexport const REACT_MEMO_TYPE: symbol = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE: symbol = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE: symbol = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE: symbol = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE: symbol = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE: symbol = Symbol.for(\n  'react.legacy_hidden',\n);\nexport const REACT_TRACING_MARKER_TYPE: symbol = Symbol.for(\n  'react.tracing_marker',\n);\n\nexport const REACT_MEMO_CACHE_SENTINEL: symbol = Symbol.for(\n  'react.memo_cache_sentinel',\n);\n\nexport const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone');\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<any> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\nexport const ASYNC_ITERATOR = Symbol.asyncIterator;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {ReactContext, ReactConsumerType} from 'shared/ReactTypes';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_CONSUMER_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {\n  enableTransitionTracing,\n  enableRenderableContext,\n} from './ReactFeatureFlags';\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const displayName = (outerType: any).displayName;\n  if (displayName) {\n    return displayName;\n  }\n  const functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\n}\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nconst REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nexport default function getComponentNameFromType(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (typeof type === 'function') {\n    if ((type: any).$$typeof === REACT_CLIENT_REFERENCE) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n    // Fall through\n    case REACT_TRACING_MARKER_TYPE:\n      if (enableTransitionTracing) {\n        return 'TracingMarker';\n      }\n  }\n  if (typeof type === 'object') {\n    if (__DEV__) {\n      if (typeof (type: any).tag === 'number') {\n        console.error(\n          'Received an unexpected object in getComponentNameFromType(). ' +\n            'This is likely a bug in React. Please file an issue.',\n        );\n      }\n    }\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        if (enableRenderableContext) {\n          return null;\n        } else {\n          const provider = (type: any);\n          return getContextName(provider._context) + '.Provider';\n        }\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        if (enableRenderableContext) {\n          return getContextName(context) + '.Provider';\n        } else {\n          return getContextName(context) + '.Consumer';\n        }\n      case REACT_CONSUMER_TYPE:\n        if (enableRenderableContext) {\n          const consumer: ReactConsumerType<any> = (type: any);\n          return getContextName(consumer._context) + '.Consumer';\n        } else {\n          return null;\n        }\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        const outerName = (type: any).displayName || null;\n        if (outerName !== null) {\n          return outerName;\n        }\n        return getComponentNameFromType(type.type) || 'Memo';\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// $FlowFixMe[method-unbinding]\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value: mixed): string {\n  if (__DEV__) {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    const hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    const type =\n      (hasToStringTag && (value: any)[Symbol.toStringTag]) ||\n      (value: any).constructor.name ||\n      'Object';\n    // $FlowFixMe[incompatible-return]\n    return type;\n  }\n}\n\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction willCoercionThrow(value: mixed): boolean {\n  if (__DEV__) {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\n/** @noinline */\nfunction testStringCoercion(value: mixed) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + (value: any);\n}\n\nexport function checkAttributeStringCoercion(\n  value: mixed,\n  attributeName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` attribute is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        attributeName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkKeyStringCoercion(value: mixed): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided key is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkPropStringCoercion(\n  value: mixed,\n  propName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` prop is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkOptionStringCoercion(\n  value: mixed,\n  propName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` option is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkCSSPropertyStringCoercion(\n  value: mixed,\n  propName: string,\n): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided `%s` CSS property is an unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        propName,\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkHtmlStringCoercion(value: mixed): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'The provided HTML markup uses a value of unsupported type %s.' +\n          ' This value must be coerced to a string before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nexport function checkFormFieldValueStringCoercion(value: mixed): void | string {\n  if (__DEV__) {\n    if (willCoercionThrow(value)) {\n      console.error(\n        'Form field values (value, checked, defaultValue, or defaultChecked props)' +\n          ' must be strings, not %s.' +\n          ' This value must be coerced to a string before using it here.',\n        typeName(value),\n      );\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_CONSUMER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\nimport {\n  enableScopeAPI,\n  enableTransitionTracing,\n  enableDebugTracing,\n  enableLegacyHidden,\n  enableRenderableContext,\n} from './ReactFeatureFlags';\n\nconst REACT_CLIENT_REFERENCE: symbol = Symbol.for('react.client.reference');\n\n// This function is deprecated. Don't use. Only the renderer knows what a valid type is.\n// TODO: Delete this when enableOwnerStacks ships.\nexport default function isValidElementType(type: mixed): boolean {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  }\n\n  // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n  if (\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    (enableDebugTracing && type === REACT_DEBUG_TRACING_MODE_TYPE) ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE ||\n    (enableLegacyHidden && type === REACT_LEGACY_HIDDEN_TYPE) ||\n    type === REACT_OFFSCREEN_TYPE ||\n    (enableScopeAPI && type === REACT_SCOPE_TYPE) ||\n    (enableTransitionTracing && type === REACT_TRACING_MARKER_TYPE)\n  ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (\n      type.$$typeof === REACT_LAZY_TYPE ||\n      type.$$typeof === REACT_MEMO_TYPE ||\n      type.$$typeof === REACT_CONTEXT_TYPE ||\n      (!enableRenderableContext && type.$$typeof === REACT_PROVIDER_TYPE) ||\n      (enableRenderableContext && type.$$typeof === REACT_CONSUMER_TYPE) ||\n      type.$$typeof === REACT_FORWARD_REF_TYPE ||\n      // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      type.$$typeof === REACT_CLIENT_REFERENCE ||\n      type.getModuleId !== undefined\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\n\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\ndisabledLog.__reactDisabledLog = true;\n\nexport function disableLogs(): void {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      // https://github.com/facebook/react/issues/19099\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true,\n      };\n      // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props,\n      });\n    }\n    disabledDepth++;\n  }\n}\n\nexport function reenableLogs(): void {\n  if (__DEV__) {\n    disabledDepth--;\n    if (disabledDepth === 0) {\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      };\n      // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        log: {...props, value: prevLog},\n        info: {...props, value: prevInfo},\n        warn: {...props, value: prevWarn},\n        error: {...props, value: prevError},\n        group: {...props, value: prevGroup},\n        groupCollapsed: {...props, value: prevGroupCollapsed},\n        groupEnd: {...props, value: prevGroupEnd},\n      });\n    }\n    if (disabledDepth < 0) {\n      console.error(\n        'disabledDepth fell below zero. ' +\n          'This is a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This is forked in server builds where the default stack frame may be source mapped.\n\nexport default ((undefined: any): (Error, CallSite[]) => string);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {enableComponentStackLocations} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport DefaultPrepareStackTrace from 'shared/DefaultPrepareStackTrace';\n\nlet prefix;\nlet suffix;\nexport function describeBuiltInComponentFrame(name: string): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n        suffix =\n          x.stack.indexOf('\\n    at') > -1\n            ? // V8\n              ' (<anonymous>)'\n            : // JSC/Spidermonkey\n              x.stack.indexOf('@') > -1\n              ? '@unknown:0:0'\n              : // Other\n                '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name + suffix;\n  } else {\n    return describeComponentFrame(name);\n  }\n}\n\nexport function describeDebugInfoFrame(name: string, env: ?string): string {\n  return describeBuiltInComponentFrame(name + (env ? ' [' + env + ']' : ''));\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap<Function, string>();\n}\n\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = DefaultPrepareStackTrace;\n  let previousDispatcher = null;\n\n  if (__DEV__) {\n    previousDispatcher = ReactSharedInternals.H;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactSharedInternals.H = null;\n    disableLogs();\n  }\n  try {\n    /**\n     * Finding a common stack frame between sample and control errors can be\n     * tricky given the different types and levels of stack trace truncation from\n     * different JS VMs. So instead we'll attempt to control what that common\n     * frame should be through this object method:\n     * Having both the sample and control errors be in the function under the\n     * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n     * `displayName` properties of the function ensures that a stack\n     * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n     * it for both control and sample stacks.\n     */\n    const RunInRootFrame = {\n      DetermineComponentFrameRoot(): [?string, ?string] {\n        let control;\n        try {\n          // This should throw.\n          if (construct) {\n            // Something should be setting the props in the constructor.\n            const Fake = function () {\n              throw Error();\n            };\n            // $FlowFixMe[prop-missing]\n            Object.defineProperty(Fake.prototype, 'props', {\n              set: function () {\n                // We use a throwing setter instead of frozen or non-writable props\n                // because that won't throw in a non-strict mode function.\n                throw Error();\n              },\n            });\n            if (typeof Reflect === 'object' && Reflect.construct) {\n              // We construct a different control for this case to include any extra\n              // frames added by the construct call.\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x) {\n                control = x;\n              }\n              // $FlowFixMe[prop-missing] found when upgrading Flow\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x) {\n              control = x;\n            }\n            // TODO(luna): This will currently only throw if the function component\n            // tries to access React/ReactDOM/props. We should probably make this throw\n            // in simple components too\n            const maybePromise = fn();\n\n            // If the function component returns a promise, it's likely an async\n            // component, which we don't yet support. Attach a noop catch handler to\n            // silence the error.\n            // TODO: Implement component stacks for async client components?\n            if (maybePromise && typeof maybePromise.catch === 'function') {\n              maybePromise.catch(() => {});\n            }\n          }\n        } catch (sample) {\n          // This is inlined manually because closure doesn't do it for us.\n          if (sample && control && typeof sample.stack === 'string') {\n            return [sample.stack, control.stack];\n          }\n        }\n        return [null, null];\n      },\n    };\n    // $FlowFixMe[prop-missing]\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      'DetermineComponentFrameRoot';\n    const namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      'name',\n    );\n    // Before ES6, the `name` property was not configurable.\n    if (namePropDescriptor && namePropDescriptor.configurable) {\n      // V8 utilizes a function's `name` property when generating a stack trace.\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        // Configurable properties can be updated even if its writable descriptor\n        // is set to `false`.\n        // $FlowFixMe[cannot-write]\n        'name',\n        {value: 'DetermineComponentFrameRoot'},\n      );\n    }\n\n    const [sampleStack, controlStack] =\n      RunInRootFrame.DetermineComponentFrameRoot();\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sampleStack.split('\\n');\n      const controlLines = controlStack.split('\\n');\n      let s = 0;\n      let c = 0;\n      while (\n        s < sampleLines.length &&\n        !sampleLines[s].includes('DetermineComponentFrameRoot')\n      ) {\n        s++;\n      }\n      while (\n        c < controlLines.length &&\n        !controlLines[c].includes('DetermineComponentFrameRoot')\n      ) {\n        c++;\n      }\n      // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                let frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n                if (fn.displayName && frame.includes('<anonymous>')) {\n                  frame = frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactSharedInternals.H = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nfunction describeComponentFrame(name: null | string) {\n  return '\\n    in ' + (name || 'Unknown');\n}\n\nexport function describeClassComponentFrame(ctor: Function): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor);\n  }\n}\n\nexport function describeFunctionComponentFrame(fn: Function): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    return describeComponentFrame(name);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\n// TODO: Delete this once the key warning no longer uses it. I.e. when enableOwnerStacks ship.\nexport function describeUnknownElementTypeFrameInDEV(type: any): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(init(payload));\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport assign from 'shared/assign';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\nimport isValidElementType from 'shared/isValidElementType';\nimport isArray from 'shared/isArray';\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\nimport {\n  disableDefaultPropsExceptForClasses,\n  enableOwnerStacks,\n} from 'shared/ReactFeatureFlags';\n\nconst REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nconst createTask =\n  // eslint-disable-next-line react-internal/no-production-logging\n  __DEV__ && enableOwnerStacks && console.createTask\n    ? // eslint-disable-next-line react-internal/no-production-logging\n      console.createTask\n    : () => null;\n\nfunction getTaskName(type) {\n  if (type === REACT_FRAGMENT_TYPE) {\n    return '<>';\n  }\n  if (\n    typeof type === 'object' &&\n    type !== null &&\n    type.$$typeof === REACT_LAZY_TYPE\n  ) {\n    // We don't want to eagerly initialize the initializer in DEV mode so we can't\n    // call it to extract the type so we don't know the type of this component.\n    return '<...>';\n  }\n  try {\n    const name = getComponentNameFromType(type);\n    return name ? '<' + name + '>' : '<...>';\n  } catch (x) {\n    return '<...>';\n  }\n}\n\nfunction getOwner() {\n  if (__DEV__) {\n    const dispatcher = ReactSharedInternals.A;\n    if (dispatcher === null) {\n      return null;\n    }\n    return dispatcher.getOwner();\n  }\n  return null;\n}\n\nlet specialPropKeyWarningShown;\nlet didWarnAboutElementRef;\nlet didWarnAboutOldJSXRuntime;\n\nif (__DEV__) {\n  didWarnAboutElementRef = {};\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  if (__DEV__) {\n    const warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://react.dev/link/special-props)',\n          displayName,\n        );\n      }\n    };\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true,\n    });\n  }\n}\n\nfunction elementRefGetterWithDeprecationWarning() {\n  if (__DEV__) {\n    const componentName = getComponentNameFromType(this.type);\n    if (!didWarnAboutElementRef[componentName]) {\n      didWarnAboutElementRef[componentName] = true;\n      console.error(\n        'Accessing element.ref was removed in React 19. ref is now a ' +\n          'regular prop. It will be removed from the JSX Element ' +\n          'type in a future release.',\n      );\n    }\n\n    // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n    const refProp = this.props.ref;\n    return refProp !== undefined ? refProp : null;\n  }\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\nfunction ReactElement(\n  type,\n  key,\n  self,\n  source,\n  owner,\n  props,\n  debugStack,\n  debugTask,\n) {\n  // Ignore whatever was passed as the ref argument and treat `props.ref` as\n  // the source of truth. The only thing we use this for is `element.ref`,\n  // which will log a deprecation warning on access. In the next release, we\n  // can remove `element.ref` as well as the `ref` argument.\n  const refProp = props.ref;\n\n  // An undefined `element.ref` is coerced to `null` for\n  // backwards compatibility.\n  const ref = refProp !== undefined ? refProp : null;\n\n  let element;\n  if (__DEV__) {\n    // In dev, make `ref` a non-enumerable property with a warning. It's non-\n    // enumerable so that test matchers and serializers don't access it and\n    // trigger the warning.\n    //\n    // `ref` will be removed from the element completely in a future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n\n      // Built-in properties that belong on the element\n      type,\n      key,\n\n      props,\n\n      // Record the component responsible for creating this element.\n      _owner: owner,\n    };\n    if (ref !== null) {\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        get: elementRefGetterWithDeprecationWarning,\n      });\n    } else {\n      // Don't warn on access if a ref is not given. This reduces false\n      // positives in cases where a test serializer uses\n      // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n      // a problem because it bypasses non-enumerability.\n      //\n      // So unfortunately this will trigger a false positive warning in Jest\n      // when the diff is printed:\n      //\n      //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n      //\n      // A bit sketchy, but this is what we've done for the `props.key` and\n      // `props.ref` accessors for years, which implies it will be good enough\n      // for `element.ref`, too. Let's see if anyone complains.\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        value: null,\n      });\n    }\n  } else {\n    // In prod, `ref` is a regular property and _owner doesn't exist.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n\n      // Built-in properties that belong on the element\n      type,\n      key,\n      ref,\n\n      props,\n    };\n  }\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: 0,\n    });\n    // debugInfo contains Server Component debug information.\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null,\n    });\n    if (enableOwnerStacks) {\n      Object.defineProperty(element, '_debugStack', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: debugStack,\n      });\n      Object.defineProperty(element, '_debugTask', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: debugTask,\n      });\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxProd(type, config, maybeKey) {\n  let key = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  let props;\n  if (!('key' in config)) {\n    // If key was not spread in, we can reuse the original props object. This\n    // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n    // target and the compiler always passes a new object. For `createElement`,\n    // we can't assume a new object is passed every time because it can be\n    // called manually.\n    //\n    // Spreading key is a warning in dev. In a future release, we will not\n    // remove a spread key from the props object. (But we'll still warn.) We'll\n    // always pass the object straight through.\n    props = config;\n  } else {\n    // We need to remove reserved props (key, prop, ref). Create a fresh props\n    // object and copy over all the non-reserved props. We don't use `delete`\n    // because in V8 it will deopt the object to dictionary mode.\n    props = {};\n    for (const propName in config) {\n      // Skip over reserved prop names\n      if (propName !== 'key') {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  if (!disableDefaultPropsExceptForClasses) {\n    // Resolve default props\n    if (type && type.defaultProps) {\n      const defaultProps = type.defaultProps;\n      for (const propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    undefined,\n    undefined,\n    getOwner(),\n    props,\n    undefined,\n    undefined,\n  );\n}\n\n// While `jsxDEV` should never be called when running in production, we do\n// support `jsx` and `jsxs` when running in development. This supports the case\n// where a third-party dependency ships code that was compiled for production;\n// we want to still provide warnings in development.\n//\n// So these functions are the _dev_ implementations of the _production_\n// API signatures.\n//\n// Since these functions are dev-only, it's ok to add an indirection here. They\n// only exist to provide different versions of `isStaticChildren`. (We shouldn't\n// use this pattern for the prod versions, though, because it will add an call\n// frame.)\nexport function jsxProdSignatureRunningInDevWithDynamicChildren(\n  type,\n  config,\n  maybeKey,\n  source,\n  self,\n) {\n  if (__DEV__) {\n    const isStaticChildren = false;\n    return jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      __DEV__ && enableOwnerStacks ? Error('react-stack-top-frame') : undefined,\n      __DEV__ && enableOwnerStacks ? createTask(getTaskName(type)) : undefined,\n    );\n  }\n}\n\nexport function jsxProdSignatureRunningInDevWithStaticChildren(\n  type,\n  config,\n  maybeKey,\n  source,\n  self,\n) {\n  if (__DEV__) {\n    const isStaticChildren = true;\n    return jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      __DEV__ && enableOwnerStacks ? Error('react-stack-top-frame') : undefined,\n      __DEV__ && enableOwnerStacks ? createTask(getTaskName(type)) : undefined,\n    );\n  }\n}\n\nconst didWarnAboutKeySpread = {};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, isStaticChildren, source, self) {\n  return jsxDEVImpl(\n    type,\n    config,\n    maybeKey,\n    isStaticChildren,\n    source,\n    self,\n    __DEV__ && enableOwnerStacks ? Error('react-stack-top-frame') : undefined,\n    __DEV__ && enableOwnerStacks ? createTask(getTaskName(type)) : undefined,\n  );\n}\n\nfunction jsxDEVImpl(\n  type,\n  config,\n  maybeKey,\n  isStaticChildren,\n  source,\n  self,\n  debugStack,\n  debugTask,\n) {\n  if (__DEV__) {\n    if (!enableOwnerStacks && !isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn here so that we can get better stack traces but with enableOwnerStacks\n      // enabled we don't need this because we get good stacks if we error in the\n      // renderer anyway. The renderer is the only one that knows what types are valid\n      // for this particular renderer so we let it error there instead.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      let info = '';\n      if (\n        type === undefined ||\n        (typeof type === 'object' &&\n          type !== null &&\n          Object.keys(type).length === 0)\n      ) {\n        info +=\n          ' You likely forgot to export your component from the file ' +\n          \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      let typeString;\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\n        info =\n          ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      console.error(\n        'React.jsx: type is invalid -- expected a string (for ' +\n          'built-in components) or a class/function (for composite ' +\n          'components) but got: %s.%s',\n        typeString,\n        info,\n      );\n    } else {\n      // This is a valid element type.\n\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      // When enableOwnerStacks is on, we no longer need the type here so this\n      // comment is no longer true. Which is why we can run this even for invalid\n      // types.\n      const children = config.children;\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (let i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            console.error(\n              'React.jsx: Static children should always be an array. ' +\n                'You are likely explicitly calling React.jsxs or React.jsxDEV. ' +\n                'Use the Babel transform instead.',\n            );\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    // Warn about key spread regardless of whether the type is valid.\n    if (hasOwnProperty.call(config, 'key')) {\n      const componentName = getComponentNameFromType(type);\n      const keys = Object.keys(config).filter(k => k !== 'key');\n      const beforeExample =\n        keys.length > 0\n          ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}'\n          : '{key: someKey}';\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        const afterExample =\n          keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n        console.error(\n          'A props object containing a \"key\" prop is being spread into JSX:\\n' +\n            '  let props = %s;\\n' +\n            '  <%s {...props} />\\n' +\n            'React keys must be passed directly to JSX without using spread:\\n' +\n            '  let props = %s;\\n' +\n            '  <%s key={someKey} {...props} />',\n          beforeExample,\n          componentName,\n          afterExample,\n          componentName,\n        );\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    let key = null;\n\n    // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n    if (maybeKey !== undefined) {\n      if (__DEV__) {\n        checkKeyStringCoercion(maybeKey);\n      }\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    let props;\n    if (!('key' in config)) {\n      // If key was not spread in, we can reuse the original props object. This\n      // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n      // target and the compiler always passes a new object. For `createElement`,\n      // we can't assume a new object is passed every time because it can be\n      // called manually.\n      //\n      // Spreading key is a warning in dev. In a future release, we will not\n      // remove a spread key from the props object. (But we'll still warn.) We'll\n      // always pass the object straight through.\n      props = config;\n    } else {\n      // We need to remove reserved props (key, prop, ref). Create a fresh props\n      // object and copy over all the non-reserved props. We don't use `delete`\n      // because in V8 it will deopt the object to dictionary mode.\n      props = {};\n      for (const propName in config) {\n        // Skip over reserved prop names\n        if (propName !== 'key') {\n          props[propName] = config[propName];\n        }\n      }\n    }\n\n    if (!disableDefaultPropsExceptForClasses) {\n      // Resolve default props\n      if (type && type.defaultProps) {\n        const defaultProps = type.defaultProps;\n        for (const propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n    }\n\n    if (key) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      defineKeyPropWarningGetter(props, displayName);\n    }\n\n    return ReactElement(\n      type,\n      key,\n      self,\n      source,\n      getOwner(),\n      props,\n      debugStack,\n      debugTask,\n    );\n  }\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  if (__DEV__) {\n    if (!enableOwnerStacks && !isValidElementType(type)) {\n      // This is just an optimistic check that provides a better stack trace before\n      // owner stacks. It's really up to the renderer if it's a valid element type.\n      // When owner stacks are enabled, we instead warn in the renderer and it'll\n      // have the stack trace of the JSX element anyway.\n      //\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      let info = '';\n      if (\n        type === undefined ||\n        (typeof type === 'object' &&\n          type !== null &&\n          Object.keys(type).length === 0)\n      ) {\n        info +=\n          ' You likely forgot to export your component from the file ' +\n          \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      let typeString;\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = `<${getComponentNameFromType(type.type) || 'Unknown'} />`;\n        info =\n          ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      console.error(\n        'React.createElement: type is invalid -- expected a string (for ' +\n          'built-in components) or a class/function (for composite ' +\n          'components) but got: %s.%s',\n        typeString,\n        info,\n      );\n    } else {\n      // This is a valid element type.\n\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      for (let i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    }\n\n    // Unlike the jsx() runtime, createElement() doesn't warn about key spread.\n  }\n\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n\n  if (config != null) {\n    if (__DEV__) {\n      if (\n        !didWarnAboutOldJSXRuntime &&\n        '__self' in config &&\n        // Do not assume this is the result of an oudated JSX transform if key\n        // is present, because the modern JSX transform sometimes outputs\n        // createElement to preserve precedence between a static key and a\n        // spread key. To avoid false positive warnings, we never warn if\n        // there's a key.\n        !('key' in config)\n      ) {\n        didWarnAboutOldJSXRuntime = true;\n        console.warn(\n          'Your app (or one of its dependencies) is using an outdated JSX ' +\n            'transform. Update to the modern JSX transform for ' +\n            'faster performance: https://react.dev/link/new-jsx-transform',\n        );\n      }\n    }\n\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        // Skip over reserved prop names\n        propName !== 'key' &&\n        // Even though we don't use these anymore in the runtime, we don't want\n        // them to appear as props, so in createElement we filter them out.\n        // We don't have to do this in the jsx() runtime because the jsx()\n        // transform never passed these as props; it used separate arguments.\n        propName !== '__self' &&\n        propName !== '__source'\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      defineKeyPropWarningGetter(props, displayName);\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    undefined,\n    undefined,\n    getOwner(),\n    props,\n    __DEV__ && enableOwnerStacks ? Error('react-stack-top-frame') : undefined,\n    __DEV__ && enableOwnerStacks ? createTask(getTaskName(type)) : undefined,\n  );\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const clonedElement = ReactElement(\n    oldElement.type,\n    newKey,\n    undefined,\n    undefined,\n    !__DEV__ ? undefined : oldElement._owner,\n    oldElement.props,\n    __DEV__ && enableOwnerStacks ? oldElement._debugStack : undefined,\n    __DEV__ && enableOwnerStacks ? oldElement._debugTask : undefined,\n  );\n  if (__DEV__) {\n    // The cloned element should inherit the original element's key validation.\n    clonedElement._store.validated = oldElement._store.validated;\n  }\n  return clonedElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\n      `The argument must be a React element, but you passed ${element}.`,\n    );\n  }\n\n  let propName;\n\n  // Original props are copied\n  const props = assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = !__DEV__ ? undefined : element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      owner = __DEV__ ? getOwner() : undefined;\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (\n      !disableDefaultPropsExceptForClasses &&\n      element.type &&\n      element.type.defaultProps\n    ) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        // Skip over reserved prop names\n        propName !== 'key' &&\n        // ...and maybe these, too, though we currently rely on them for\n        // warnings and debug information in dev. Need to decide if we're OK\n        // with dropping them. In the jsx() runtime it's not an issue because\n        // the data gets passed as separate arguments instead of props, but\n        // it would be nice to stop relying on them entirely so we can drop\n        // them from the internal Fiber field.\n        propName !== '__self' &&\n        propName !== '__source' &&\n        // Undefined `ref` is ignored by cloneElement. We treat it the same as\n        // if the property were missing. This is mostly for\n        // backwards compatibility.\n        !(propName === 'ref' && config.ref === undefined)\n      ) {\n        if (\n          !disableDefaultPropsExceptForClasses &&\n          config[propName] === undefined &&\n          defaultProps !== undefined\n        ) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  const clonedElement = ReactElement(\n    element.type,\n    key,\n    undefined,\n    undefined,\n    owner,\n    props,\n    __DEV__ && enableOwnerStacks ? element._debugStack : undefined,\n    __DEV__ && enableOwnerStacks ? element._debugTask : undefined,\n  );\n\n  for (let i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], clonedElement.type);\n  }\n\n  return clonedElement;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (__DEV__) {\n    if (enableOwnerStacks) {\n      // When owner stacks is enabled no warnings happens. All we do is\n      // mark elements as being in a valid static child position so they\n      // don't need keys.\n      if (isValidElement(node)) {\n        if (node._store) {\n          node._store.validated = 1;\n        }\n      }\n      return;\n    }\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) {\n      // This is a reference to a client component so it's unknown.\n    } else if (isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        const child = node[i];\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = 1;\n      }\n    } else {\n      const iteratorFn = getIteratorFn(node);\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          const iterator = iteratorFn.call(node);\n          if (iterator !== node) {\n            let step;\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n\nconst ownerHasKeyUseWarning = {};\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (enableOwnerStacks) {\n    // Skip. Will verify in renderer instead.\n    return;\n  }\n  if (__DEV__) {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n    element._store.validated = 1;\n\n    const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n    // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n    let childOwner = '';\n    if (element && element._owner != null && element._owner !== getOwner()) {\n      let ownerName = null;\n      if (typeof element._owner.tag === 'number') {\n        ownerName = getComponentNameFromType(element._owner.type);\n      } else if (typeof element._owner.name === 'string') {\n        ownerName = element._owner.name;\n      }\n      // Give the component that originally created this child.\n      childOwner = ` It was passed a child from ${ownerName}.`;\n    }\n\n    const prevGetCurrentStack = ReactSharedInternals.getCurrentStack;\n    ReactSharedInternals.getCurrentStack = function () {\n      const owner = element._owner;\n      // Add an extra top frame while an element is being validated\n      let stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        owner ? owner.type : null,\n      );\n      // Delegate to the injected renderer-specific implementation\n      if (prevGetCurrentStack) {\n        stack += prevGetCurrentStack() || '';\n      }\n      return stack;\n    };\n    console.error(\n      'Each child in a list should have a unique \"key\" prop.' +\n        '%s%s See https://react.dev/link/warning-keys for more information.',\n      currentComponentErrorInfo,\n      childOwner,\n    );\n    ReactSharedInternals.getCurrentStack = prevGetCurrentStack;\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  if (__DEV__) {\n    let info = '';\n    const owner = getOwner();\n    if (owner) {\n      const name = getComponentNameFromType(owner.type);\n      if (name) {\n        info = '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n    if (!info) {\n      const parentName = getComponentNameFromType(parentType);\n      if (parentName) {\n        info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\n      }\n    }\n    return info;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport {REACT_FRAGMENT_TYPE} from 'shared/ReactSymbols';\nimport {\n  jsxProd,\n  jsxProdSignatureRunningInDevWithDynamicChildren,\n  jsxProdSignatureRunningInDevWithStaticChildren,\n  jsxDEV as _jsxDEV,\n} from './ReactJSXElement';\n\nconst jsx: any = __DEV__\n  ? jsxProdSignatureRunningInDevWithDynamicChildren\n  : jsxProd;\n// we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\nconst jsxs: any = __DEV__\n  ? jsxProdSignatureRunningInDevWithStaticChildren\n  : jsxProd;\n\nconst jsxDEV: any = __DEV__ ? _jsxDEV : undefined;\n\nexport {REACT_FRAGMENT_TYPE as Fragment, jsx, jsxs, jsxDEV};\n"],"names":["enableScopeAPI","enableTransitionTracing","enableLegacyHidden","enableRenderableContext","enableDebugTracing","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","type","REACT_CLIENT_REFERENCE","getComponentNameFromType","$$typeof","tag","console","error","context","consumer","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","ReactSharedInternals","React","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","hasOwnProperty","Object","prototype","assign","typeName","value","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","isValidElementType","getModuleId","undefined","isArrayImpl","Array","isArray","a","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","warn","group","groupCollapsed","groupEnd","props","configurable","enumerable","writable","defineProperties","reenableLogs","prefix","suffix","describeBuiltInComponentFrame","Error","match","stack","trim","indexOf","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","get","previousPrepareStackTrace","prepareStackTrace","DefaultPrepareStackTrace","previousDispatcher","H","RunInRootFrame","DetermineComponentFrameRoot","control","Fake","defineProperty","set","Reflect","call","maybePromise","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","sampleStack","controlStack","sampleLines","split","controlLines","s","c","length","includes","replace","__DEV__","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","getOwner","dispatcher","A","specialPropKeyWarningShown","didWarnAboutElementRef","hasValidKey","config","getter","isReactWarning","key","defineKeyPropWarningGetter","warnAboutAccessingKey","elementRefGetterWithDeprecationWarning","componentName","refProp","ref","ReactElement","self","source","owner","debugStack","debugTask","element","_owner","_store","freeze","jsxProdSignatureRunningInDevWithDynamicChildren","maybeKey","isStaticChildren","jsxDEVImpl","jsxProdSignatureRunningInDevWithStaticChildren","didWarnAboutKeySpread","keys","typeString","children","i","validateChildKeys","filter","k","beforeExample","join","afterExample","propName","node","parentType","child","isValidElement","validateExplicitKey","validated","iteratorFn","entries","step","next","done","object","ownerHasKeyUseWarning","currentComponentErrorInfo","getCurrentComponentErrorInfo","childOwner","ownerName","prevGetCurrentStack","getCurrentStack","parentName","jsx","jsxs"],"mappings":"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"}