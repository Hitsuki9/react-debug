{"version":3,"file":"react.production.min.js","sources":["../../../../packages/shared/ReactVersion.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/react/src/ReactNoopUpdateQueue.js","../../../../packages/shared/assign.js","../../../../packages/react/src/ReactBaseClasses.js","../../../../packages/react/src/ReactCreateRef.js","../../../../packages/shared/isArray.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/react/src/ReactCurrentOwner.js","../../../../packages/react/src/ReactElement.js","../../../../packages/react/src/ReactChildren.js","../../../../packages/react/src/ReactContext.js","../../../../packages/react/src/ReactLazy.js","../../../../packages/react/src/ReactForwardRef.js","../../../../packages/react/src/ReactMemo.js","../../../../packages/react/src/ReactCurrentCache.js","../../../../packages/react/src/ReactCache.js","../../../../packages/react/src/ReactCurrentDispatcher.js","../../../../packages/react/src/ReactHooks.js","../../../../packages/react/src/ReactCurrentBatchConfig.js","../../../../packages/react/src/ReactServerContextRegistry.js","../../../../packages/react/src/ReactSharedInternals.js","../../../../packages/react/src/ReactServerContext.js","../../../../packages/react/src/ReactStartTransition.js","../../../../packages/react/src/ReactAct.js","../../../../packages/react/src/React.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\n//\n// TODO: 18.0.0 has not been released to NPM;\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\n// When we next publish a release, update the matching TODO in backend/renderer.js\n// TODO: This module is used both by the release scripts and to expose a version\n// at runtime. We should instead inject the version number as part of the build\n// process, and use the ReactVersions.js module as the single source of truth.\nexport default '18.2.0';\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types.\nexport const REACT_ELEMENT_TYPE: symbol = Symbol.for('react.element');\nexport const REACT_PORTAL_TYPE: symbol = Symbol.for('react.portal');\nexport const REACT_FRAGMENT_TYPE: symbol = Symbol.for('react.fragment');\nexport const REACT_STRICT_MODE_TYPE: symbol = Symbol.for('react.strict_mode');\nexport const REACT_PROFILER_TYPE: symbol = Symbol.for('react.profiler');\nexport const REACT_PROVIDER_TYPE: symbol = Symbol.for('react.provider');\nexport const REACT_CONTEXT_TYPE: symbol = Symbol.for('react.context');\nexport const REACT_SERVER_CONTEXT_TYPE: symbol = Symbol.for(\n  'react.server_context',\n);\nexport const REACT_FORWARD_REF_TYPE: symbol = Symbol.for('react.forward_ref');\nexport const REACT_SUSPENSE_TYPE: symbol = Symbol.for('react.suspense');\nexport const REACT_SUSPENSE_LIST_TYPE: symbol = Symbol.for(\n  'react.suspense_list',\n);\nexport const REACT_MEMO_TYPE: symbol = Symbol.for('react.memo');\nexport const REACT_LAZY_TYPE: symbol = Symbol.for('react.lazy');\nexport const REACT_SCOPE_TYPE: symbol = Symbol.for('react.scope');\nexport const REACT_DEBUG_TRACING_MODE_TYPE: symbol = Symbol.for(\n  'react.debug_trace_mode',\n);\nexport const REACT_OFFSCREEN_TYPE: symbol = Symbol.for('react.offscreen');\nexport const REACT_LEGACY_HIDDEN_TYPE: symbol = Symbol.for(\n  'react.legacy_hidden',\n);\nexport const REACT_CACHE_TYPE: symbol = Symbol.for('react.cache');\nexport const REACT_TRACING_MARKER_TYPE: symbol = Symbol.for(\n  'react.tracing_marker',\n);\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED: symbol = Symbol.for(\n  'react.default_value',\n);\n\nexport const REACT_MEMO_CACHE_SENTINEL: symbol = Symbol.for(\n  'react.memo_cache_sentinel',\n);\n\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<any> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && (constructor.displayName || constructor.name)) ||\n      'ReactClass';\n    const warningKey = `${componentName}.${callerName}`;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    console.error(\n      \"Can't call %s on a component that is not yet mounted. \" +\n        'This is a no-op, but it might indicate a bug in your application. ' +\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\n        'class property with the desired state in the %s component.',\n      callerName,\n      componentName,\n    );\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nconst ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function(publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function(\n    publicInstance,\n    completeState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function(\n    publicInstance,\n    partialState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'setState');\n  },\n};\n\nexport default ReactNoopUpdateQueue;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst assign = Object.assign;\n\nexport default assign;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\nimport assign from 'shared/assign';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function(partialState, callback) {\n  if (\n    typeof partialState !== 'object' &&\n    typeof partialState !== 'function' &&\n    partialState != null\n  ) {\n    throw new Error(\n      'setState(...): takes an object of state variables to update or a ' +\n        'function which returns an object of state variables.',\n    );\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function(callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (__DEV__) {\n  const deprecatedAPIs = {\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n        'componentWillUnmount to prevent memory leaks.',\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n        'https://github.com/facebook/react/issues/3236).',\n    ],\n  };\n  const defineDeprecationWarning = function(methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function() {\n        console.warn(\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\n          info[0],\n          info[1],\n        );\n        return undefined;\n      },\n    });\n  };\n  for (const fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nexport {Component, PureComponent};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {RefObject} from 'shared/ReactTypes';\n\n// an immutable object with a single mutable value\nexport function createRef(): RefObject {\n  const refObject = {\n    current: null,\n  };\n  if (__DEV__) {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// $FlowFixMe[method-unbinding]\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nconst ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Fiber),\n};\n\nexport default ReactCurrentOwner;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\nimport assign from 'shared/assign';\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n};\n\nlet specialPropKeyWarningShown,\n  specialPropRefWarningShown,\n  didWarnAboutStringRefs;\n\nif (__DEV__) {\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  const warnAboutAccessingKey = function() {\n    if (__DEV__) {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n        console.error(\n          '%s: `key` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true,\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  const warnAboutAccessingRef = function() {\n    if (__DEV__) {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n        console.error(\n          '%s: `ref` is not a prop. Trying to access it will result ' +\n            'in `undefined` being returned. If you need to access the same ' +\n            'value within the child component, you should pass it as a different ' +\n            'prop. (https://reactjs.org/link/special-props)',\n          displayName,\n        );\n      }\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true,\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  if (__DEV__) {\n    if (\n      typeof config.ref === 'string' &&\n      ReactCurrentOwner.current &&\n      config.__self &&\n      ReactCurrentOwner.current.stateNode !== config.__self\n    ) {\n      const componentName = getComponentNameFromType(\n        ReactCurrentOwner.current.type,\n      );\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        console.error(\n          'Component \"%s\" contains the string ref \"%s\". ' +\n            'Support for string refs will be removed in a future major release. ' +\n            'This case cannot be automatically converted to an arrow function. ' +\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n          componentName,\n          config.ref,\n        );\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\n  const element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false,\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self,\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsx(type, config, maybeKey) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    undefined,\n    undefined,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\nexport function jsxDEV(type, config, maybeKey, source, self) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n\n  // Currently, key can be spread in as a prop. This causes a potential\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n  // but as an intermediary step, we will use jsxDEV for everything except\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n  // key is explicitly declared to be undefined or not.\n  if (maybeKey !== undefined) {\n    if (__DEV__) {\n      checkKeyStringCoercion(maybeKey);\n    }\n    key = '' + maybeKey;\n  }\n\n  if (hasValidKey(config)) {\n    if (__DEV__) {\n      checkKeyStringCoercion(config.key);\n    }\n    key = '' + config.key;\n  }\n\n  if (hasValidRef(config)) {\n    ref = config.ref;\n    warnIfStringRefCannotBeAutoConverted(config);\n  }\n\n  // Remaining properties are added to a new props object\n  for (propName in config) {\n    if (\n      hasOwnProperty.call(config, propName) &&\n      !RESERVED_PROPS.hasOwnProperty(propName)\n    ) {\n      props[propName] = config[propName];\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  if (key || ref) {\n    const displayName =\n      typeof type === 'function'\n        ? type.displayName || type.name || 'Unknown'\n        : type;\n    if (key) {\n      defineKeyPropWarningGetter(props, displayName);\n    }\n    if (ref) {\n      defineRefPropWarningGetter(props, displayName);\n    }\n  }\n\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n  let self = null;\n  let source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      if (__DEV__) {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key || ref) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\nexport function createFactory(type) {\n  const factory = createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook: remove it\n  factory.type = type;\n  return factory;\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const newElement = ReactElement(\n    oldElement.type,\n    newKey,\n    oldElement.ref,\n    oldElement._self,\n    oldElement._source,\n    oldElement._owner,\n    oldElement.props,\n  );\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\n    );\n  }\n\n  let propName;\n\n  // Original props are copied\n  const props = assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n  let ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  const self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  const source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      if (__DEV__) {\n        checkKeyStringCoercion(config.key);\n      }\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport isArray from 'shared/isArray';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\n\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\n\nconst SEPARATOR = '.';\nconst SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key: string): string {\n  const escapeRegex = /[=:]/g;\n  const escaperLookup = {\n    '=': '=0',\n    ':': '=2',\n  };\n  const escapedString = key.replace(escapeRegex, function(match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nlet didWarnAboutMaps = false;\n\nconst userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text: string): string {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getElementKey(element: any, index: number): string {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    if (__DEV__) {\n      checkKeyStringCoercion(element.key);\n    }\n    return escape('' + element.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction mapIntoArray(\n  children: ?ReactNodeList,\n  array: Array<React$Node>,\n  escapedPrefix: string,\n  nameSoFar: string,\n  callback: (?React$Node) => ?ReactNodeList,\n): number {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch ((children: any).$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    const child = children;\n    let mappedChild = callback(child);\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n    const childKey =\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\n    if (isArray(mappedChild)) {\n      let escapedChildKey = '';\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        if (__DEV__) {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n        mappedChild = cloneAndReplaceKey(\n          mappedChild,\n          // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          escapedPrefix +\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\n              ? escapeUserProvidedKey(\n                  // eslint-disable-next-line react-internal/safe-string-coercion\n                  '' +\n                    // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n                    mappedChild.key,\n                ) + '/'\n              : '') +\n            childKey,\n        );\n      }\n      array.push(mappedChild);\n    }\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(\n        child,\n        array,\n        escapedPrefix,\n        nextName,\n        callback,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      const iterableChildren: Iterable<React$Node> & {\n        entries: any,\n      } = (children: any);\n\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            console.warn(\n              'Using Maps as children is not supported. ' +\n                'Use an array of keyed ReactElements instead.',\n            );\n          }\n          didWarnAboutMaps = true;\n        }\n      }\n\n      const iterator = iteratorFn.call(iterableChildren);\n      let step;\n      let ii = 0;\n      // $FlowFixMe `iteratorFn` might return null according to typing.\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(\n          child,\n          array,\n          escapedPrefix,\n          nextName,\n          callback,\n        );\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      const childrenString = String((children: any));\n\n      throw new Error(\n        `Objects are not valid as a React child (found: ${\n          childrenString === '[object Object]'\n            ? 'object with keys {' +\n              Object.keys((children: any)).join(', ') +\n              '}'\n            : childrenString\n        }). ` +\n          'If you meant to render a collection of children, use an array ' +\n          'instead.',\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\ntype MapFunc = (child: ?React$Node, index: number) => ?ReactNodeList;\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(\n  children: ?ReactNodeList,\n  func: MapFunc,\n  context: mixed,\n): ?Array<React$Node> {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  let count = 0;\n  mapIntoArray(children, result, '', '', function(child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children: ?ReactNodeList): number {\n  let n = 0;\n  mapChildren(children, () => {\n    n++;\n    // Don't return anything\n  });\n  return n;\n}\n\ntype ForEachFunc = (child: ?React$Node) => void;\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(\n  children: ?ReactNodeList,\n  forEachFunc: ForEachFunc,\n  forEachContext: mixed,\n): void {\n  mapChildren(\n    children,\n    function() {\n      forEachFunc.apply(this, arguments);\n      // Don't return anything.\n    },\n    forEachContext,\n  );\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\n  return mapChildren(children, child => child) || [];\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild<T>(children: T): T {\n  if (!isValidElement(children)) {\n    throw new Error(\n      'React.Children.only expected to receive a single React element child.',\n    );\n  }\n\n  return children;\n}\n\nexport {\n  forEachChildren as forEach,\n  mapChildren as map,\n  countChildren as count,\n  onlyChild as only,\n  toArray,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n\n  const context: ReactContext<T> = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: (null: any),\n    Consumer: (null: any),\n\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: (null: any),\n    _globalName: (null: any),\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context,\n  };\n\n  let hasWarnedAboutUsingNestedContextConsumers = false;\n  let hasWarnedAboutUsingConsumerProvider = false;\n  let hasWarnedAboutDisplayNameOnConsumer = false;\n\n  if (__DEV__) {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    const Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n    };\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get() {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n            console.error(\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Provider> instead?',\n            );\n          }\n          return context.Provider;\n        },\n        set(_Provider) {\n          context.Provider = _Provider;\n        },\n      },\n      _currentValue: {\n        get() {\n          return context._currentValue;\n        },\n        set(_currentValue) {\n          context._currentValue = _currentValue;\n        },\n      },\n      _currentValue2: {\n        get() {\n          return context._currentValue2;\n        },\n        set(_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        },\n      },\n      _threadCount: {\n        get() {\n          return context._threadCount;\n        },\n        set(_threadCount) {\n          context._threadCount = _threadCount;\n        },\n      },\n      Consumer: {\n        get() {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n            console.error(\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\n            );\n          }\n          return context.Consumer;\n        },\n      },\n      displayName: {\n        get() {\n          return context.displayName;\n        },\n        set(displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            console.warn(\n              'Setting `displayName` on Context.Consumer has no effect. ' +\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\n              displayName,\n            );\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        },\n      },\n    });\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n    context.Consumer = Consumer;\n  } else {\n    context.Consumer = context;\n  }\n\n  if (__DEV__) {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\n\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\n\nconst Uninitialized = -1;\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype UninitializedPayload<T> = {\n  _status: -1,\n  _result: () => Thenable<{default: T, ...}>,\n};\n\ntype PendingPayload = {\n  _status: 0,\n  _result: Wakeable,\n};\n\ntype ResolvedPayload<T> = {\n  _status: 1,\n  _result: {default: T, ...},\n};\n\ntype RejectedPayload = {\n  _status: 2,\n  _result: mixed,\n};\n\ntype Payload<T> =\n  | UninitializedPayload<T>\n  | PendingPayload\n  | ResolvedPayload<T>\n  | RejectedPayload;\n\nexport type LazyComponent<T, P> = {\n  $$typeof: symbol | number,\n  _payload: P,\n  _init: (payload: P) => T,\n};\n\nfunction lazyInitializer<T>(payload: Payload<T>): T {\n  if (payload._status === Uninitialized) {\n    const ctor = payload._result;\n    const thenable = ctor();\n    // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n    thenable.then(\n      moduleObject => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const resolved: ResolvedPayload<T> = (payload: any);\n          resolved._status = Resolved;\n          resolved._result = moduleObject;\n        }\n      },\n      error => {\n        if (payload._status === Pending || payload._status === Uninitialized) {\n          // Transition to the next state.\n          const rejected: RejectedPayload = (payload: any);\n          rejected._status = Rejected;\n          rejected._result = error;\n        }\n      },\n    );\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      const pending: PendingPayload = (payload: any);\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n  if (payload._status === Resolved) {\n    const moduleObject = payload._result;\n    if (__DEV__) {\n      if (moduleObject === undefined) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\\n\\n\" +\n            'Did you accidentally put curly braces around the import?',\n          moduleObject,\n        );\n      }\n    }\n    if (__DEV__) {\n      if (!('default' in moduleObject)) {\n        console.error(\n          'lazy: Expected the result of a dynamic imp' +\n            'ort() call. ' +\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n            // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' +\n            \"ort('./MyComponent'))\",\n          moduleObject,\n        );\n      }\n    }\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nexport function lazy<T>(\n  ctor: () => Thenable<{default: T, ...}>,\n): LazyComponent<T, Payload<T>> {\n  const payload: Payload<T> = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor,\n  };\n\n  const lazyType: LazyComponent<T, Payload<T>> = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer,\n  };\n\n  if (__DEV__) {\n    // In production, this would just set it on the object.\n    let defaultProps;\n    let propTypes;\n    // $FlowFixMe\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get() {\n          return defaultProps;\n        },\n        set(newDefaultProps) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          defaultProps = newDefaultProps;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true,\n          });\n        },\n      },\n      propTypes: {\n        configurable: true,\n        get() {\n          return propTypes;\n        },\n        set(newPropTypes) {\n          console.error(\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          propTypes = newPropTypes;\n          // Match production behavior more closely:\n          // $FlowFixMe\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true,\n          });\n        },\n      },\n    });\n  }\n\n  return lazyType;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nexport function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      console.error(\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      console.error(\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        console.error(\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\n          render.length === 1\n            ? 'Did you forget to use the ref parameter?'\n            : 'Any additional parameter will be undefined.',\n        );\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        console.error(\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\n            'Did you accidentally pass a React component?',\n        );\n      }\n    }\n  }\n\n  const elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport isValidElementType from 'shared/isValidElementType';\n\nexport function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      console.error(\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  const elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n  if (__DEV__) {\n    let ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function() {\n        return ownName;\n      },\n      set: function(name) {\n        ownName = name;\n\n        // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      },\n    });\n  }\n  return elementType;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {CacheDispatcher} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current Cache dispatcher.\n */\nconst ReactCurrentCache = {\n  current: (null: null | CacheDispatcher),\n};\n\nexport default ReactCurrentCache;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactCurrentCache from './ReactCurrentCache';\n\nconst UNTERMINATED = 0;\nconst TERMINATED = 1;\nconst ERRORED = 2;\n\ntype UnterminatedCacheNode<T> = {\n  s: 0,\n  v: void,\n  o: null | WeakMap<Function | Object, CacheNode<T>>,\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>,\n};\n\ntype TerminatedCacheNode<T> = {\n  s: 1,\n  v: T,\n  o: null | WeakMap<Function | Object, CacheNode<T>>,\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>,\n};\n\ntype ErroredCacheNode<T> = {\n  s: 2,\n  v: mixed,\n  o: null | WeakMap<Function | Object, CacheNode<T>>,\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>,\n};\n\ntype CacheNode<T> =\n  | TerminatedCacheNode<T>\n  | UnterminatedCacheNode<T>\n  | ErroredCacheNode<T>;\n\nfunction createCacheRoot<T>(): WeakMap<Function | Object, CacheNode<T>> {\n  return new WeakMap();\n}\n\nfunction createCacheNode<T>(): CacheNode<T> {\n  return {\n    s: UNTERMINATED, // status, represents whether the cached computation returned a value or threw an error\n    v: undefined, // value, either the cached result or an error, depending on s\n    o: null, // object cache, a WeakMap where non-primitive arguments are stored\n    p: null, // primitive cache, a regular Map where primitive arguments are stored.\n  };\n}\n\nexport function cache<A: Iterable<mixed>, T>(fn: (...A) => T): (...A) => T {\n  return function() {\n    const dispatcher = ReactCurrentCache.current;\n    if (!dispatcher) {\n      // If there is no dispatcher, then we treat this as not being cached.\n      // $FlowFixMe: We don't want to use rest arguments since we transpile the code.\n      return fn.apply(null, arguments);\n    }\n    const fnMap = dispatcher.getCacheForType(createCacheRoot);\n    const fnNode = fnMap.get(fn);\n    let cacheNode: CacheNode<T>;\n    if (fnNode === undefined) {\n      cacheNode = createCacheNode();\n      fnMap.set(fn, cacheNode);\n    } else {\n      cacheNode = fnNode;\n    }\n    for (let i = 0, l = arguments.length; i < l; i++) {\n      const arg = arguments[i];\n      if (\n        typeof arg === 'function' ||\n        (typeof arg === 'object' && arg !== null)\n      ) {\n        // Objects go into a WeakMap\n        let objectCache = cacheNode.o;\n        if (objectCache === null) {\n          cacheNode.o = objectCache = new WeakMap();\n        }\n        const objectNode = objectCache.get(arg);\n        if (objectNode === undefined) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        // Primitives go into a regular Map\n        let primitiveCache = cacheNode.p;\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = new Map();\n        }\n        const primitiveNode = primitiveCache.get(arg);\n        if (primitiveNode === undefined) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n    if (cacheNode.s === TERMINATED) {\n      return cacheNode.v;\n    }\n    if (cacheNode.s === ERRORED) {\n      throw cacheNode.v;\n    }\n    try {\n      // $FlowFixMe: We don't want to use rest arguments since we transpile the code.\n      const result = fn.apply(null, arguments);\n      const terminatedNode: TerminatedCacheNode<T> = (cacheNode: any);\n      terminatedNode.s = TERMINATED;\n      terminatedNode.v = result;\n      return result;\n    } catch (error) {\n      // We store the first error that's thrown and rethrow it.\n      const erroredNode: ErroredCacheNode<T> = (cacheNode: any);\n      erroredNode.s = ERRORED;\n      erroredNode.v = error;\n      throw error;\n    }\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\n\n/**\n * Keeps track of the current dispatcher.\n */\nconst ReactCurrentDispatcher = {\n  current: (null: null | Dispatcher),\n};\n\nexport default ReactCurrentDispatcher;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n  StartTransitionOptions,\n  Usable,\n} from 'shared/ReactTypes';\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\nimport ReactCurrentCache from './ReactCurrentCache';\n\ntype BasicStateAction<S> = (S => S) | S;\ntype Dispatch<A> = A => void;\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  if (__DEV__) {\n    if (dispatcher === null) {\n      console.error(\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n          ' one of the following reasons:\\n' +\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n          '2. You might be breaking the Rules of Hooks\\n' +\n          '3. You might have more than one copy of React in the same app\\n' +\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n      );\n    }\n  }\n  // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n  return ((dispatcher: any): Dispatcher);\n}\n\nexport function getCacheSignal(): AbortSignal {\n  const dispatcher = ReactCurrentCache.current;\n  if (!dispatcher) {\n    // If we have no cache to associate with this call, then we don't know\n    // its lifetime. We abort early since that's safer than letting it live\n    // for ever. Unlike just caching which can be a functional noop outside\n    // of React, these should generally always be associated with some React\n    // render but we're not limiting quite as much as making it a Hook.\n    // It's safer than erroring early at runtime.\n    const controller = new AbortController();\n    const reason = new Error(\n      'This CacheSignal was requested outside React which means that it is ' +\n        'immediately aborted.',\n    );\n    // $FlowFixMe Flow doesn't yet know about this argument.\n    controller.abort(reason);\n    return controller.signal;\n  }\n  return dispatcher.getCacheSignal();\n}\n\nexport function getCacheForType<T>(resourceType: () => T): T {\n  const dispatcher = ReactCurrentCache.current;\n  if (!dispatcher) {\n    // If there is no dispatcher, then we treat this as not being cached.\n    return resourceType();\n  }\n  return dispatcher.getCacheForType(resourceType);\n}\n\nexport function useContext<T>(Context: ReactContext<T>): T {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    // TODO: add a more generic warning for invalid values.\n    if ((Context: any)._context !== undefined) {\n      const realContext = (Context: any)._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        console.error(\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\n        );\n      } else if (realContext.Provider === Context) {\n        console.error(\n          'Calling useContext(Context.Provider) is not supported. ' +\n            'Did you mean to call useContext(Context) instead?',\n        );\n      }\n    }\n  }\n  return dispatcher.useContext(Context);\n}\n\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {current: T} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\n\nexport function useInsertionEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\nexport function useCallback<T>(\n  callback: T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\n\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nexport function useTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\n\nexport function useDeferredValue<T>(value: T): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\n\nexport function useId(): string {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\n\nexport function useMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\n}\n\nexport function useSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n  );\n}\n\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.useCacheRefresh();\n}\n\nexport function use<T>(usable: Usable<T>): T {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.use(usable);\n}\n\nexport function useMemoCache(size: number): Array<any> {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.useMemoCache(size);\n}\n\nexport function useEvent<T>(callback: T): void {\n  const dispatcher = resolveDispatcher();\n  // $FlowFixMe This is unstable, thus optional\n  return dispatcher.useEvent(callback);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent';\n\ntype BatchConfig = {\n  transition: BatchConfigTransition | null,\n};\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nconst ReactCurrentBatchConfig: BatchConfig = {\n  transition: null,\n};\n\nexport default ReactCurrentBatchConfig;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactServerContext} from 'shared/ReactTypes';\n\nexport const ContextRegistry: {\n  [globalName: string]: ReactServerContext<any>,\n} = {};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\nimport ReactCurrentCache from './ReactCurrentCache';\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\nimport {ContextRegistry} from './ReactServerContextRegistry';\n\nconst ReactSharedInternals = {\n  ReactCurrentDispatcher,\n  ReactCurrentCache,\n  ReactCurrentBatchConfig,\n  ReactCurrentOwner,\n};\n\nif (__DEV__) {\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\nif (enableServerContext) {\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_PROVIDER_TYPE,\n  REACT_SERVER_CONTEXT_TYPE,\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\n} from 'shared/ReactSymbols';\n\nimport type {\n  ReactServerContext,\n  ServerContextJSONValue,\n} from 'shared/ReactTypes';\n\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\n\nexport function createServerContext<T: ServerContextJSONValue>(\n  globalName: string,\n  defaultValue: T,\n): ReactServerContext<T> {\n  if (!enableServerContext) {\n    throw new Error('Not implemented.');\n  }\n  let wasDefined = true;\n  if (!ContextRegistry[globalName]) {\n    wasDefined = false;\n    const context: ReactServerContext<T> = {\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\n\n      // As a workaround to support multiple concurrent renderers, we categorize\n      // some renderers as primary and others as secondary. We only expect\n      // there to be two concurrent renderers at most: React Native (primary) and\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\n      // Secondary renderers store their context values on separate fields.\n      _currentValue: defaultValue,\n      _currentValue2: defaultValue,\n\n      _defaultValue: defaultValue,\n\n      // Used to track how many concurrent renderers this context currently\n      // supports within in a single renderer. Such as parallel server rendering.\n      _threadCount: 0,\n      // These are circular\n      Provider: (null: any),\n      Consumer: (null: any),\n      _globalName: globalName,\n    };\n\n    context.Provider = {\n      $$typeof: REACT_PROVIDER_TYPE,\n      _context: context,\n    };\n\n    if (__DEV__) {\n      let hasWarnedAboutUsingConsumer;\n      context._currentRenderer = null;\n      context._currentRenderer2 = null;\n      Object.defineProperties(\n        context,\n        ({\n          Consumer: {\n            get() {\n              if (!hasWarnedAboutUsingConsumer) {\n                console.error(\n                  'Consumer pattern is not supported by ReactServerContext',\n                );\n                hasWarnedAboutUsingConsumer = true;\n              }\n              return null;\n            },\n          },\n        }: any),\n      );\n    }\n    ContextRegistry[globalName] = context;\n  }\n\n  const context = ContextRegistry[globalName];\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n    context._defaultValue = defaultValue;\n    if (\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue = defaultValue;\n    }\n    if (\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\n    ) {\n      context._currentValue2 = defaultValue;\n    }\n  } else if (wasDefined) {\n    throw new Error(`ServerContext: ${globalName} already defined`);\n  }\n  return context;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\n\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\n\nexport function startTransition(\n  scope: () => void,\n  options?: StartTransitionOptions,\n) {\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  const currentTransition = ReactCurrentBatchConfig.transition;\n\n  if (__DEV__) {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  if (enableTransitionTracing) {\n    if (options !== undefined && options.name !== undefined) {\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      ReactCurrentBatchConfig.transition.name = options.name;\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      ReactCurrentBatchConfig.transition.startTime = -1;\n    }\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    if (__DEV__) {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        const updatedFibersCount = currentTransition._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Thenable} from 'shared/ReactTypes';\nimport type {RendererTask} from './ReactCurrentActQueue';\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\nimport queueMacrotask from 'shared/enqueueTask';\n\n// `act` calls can be nested, so we track the depth. This represents the\n// number of `act` scopes on the stack.\nlet actScopeDepth = 0;\n\n// We only warn the first time you neglect to await an async `act` scope.\nlet didWarnNoAwaitAct = false;\n\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\n  if (__DEV__) {\n    // When ReactCurrentActQueue.current is not null, it signals to React that\n    // we're currently inside an `act` scope. React will push all its tasks to\n    // this queue instead of scheduling them with platform APIs.\n    //\n    // We set this to an empty array when we first enter an `act` scope, and\n    // only unset it once we've left the outermost `act` scope — remember that\n    // `act` calls can be nested.\n    //\n    // If we're already inside an `act` scope, reuse the existing queue.\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    const prevActQueue = ReactCurrentActQueue.current;\n    const prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n    const queue = (ReactCurrentActQueue.current =\n      prevActQueue !== null ? prevActQueue : []);\n    // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n    // set to `true` while the given callback is executed, not for updates\n    // triggered during an async event, because this is how the legacy\n    // implementation of `act` behaved.\n    ReactCurrentActQueue.isBatchingLegacy = true;\n\n    let result;\n    // This tracks whether the `act` call is awaited. In certain cases, not\n    // awaiting it is a mistake, so we will detect that and warn.\n    let didAwaitActCall = false;\n    try {\n      // Reset this to `false` right before entering the React work loop. The\n      // only place we ever read this fields is just below, right after running\n      // the callback. So we don't need to reset after the callback runs.\n      ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n      result = callback();\n      const didScheduleLegacyUpdate =\n        ReactCurrentActQueue.didScheduleLegacyUpdate;\n\n      // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n      if (!prevIsBatchingLegacy && didScheduleLegacyUpdate) {\n        flushActQueue(queue);\n      }\n      // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    } catch (error) {\n      // `isBatchingLegacy` gets reset using the regular stack, not the async\n      // one used to track `act` scopes. Why, you may be wondering? Because\n      // that's how it worked before version 18. Yes, it's confusing! We should\n      // delete legacy mode!!\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n      popActScope(prevActQueue, prevActScopeDepth);\n      throw error;\n    }\n\n    if (\n      result !== null &&\n      typeof result === 'object' &&\n      // $FlowFixMe[method-unbinding]\n      typeof result.then === 'function'\n    ) {\n      // A promise/thenable was returned from the callback. Wait for it to\n      // resolve before flushing the queue.\n      //\n      // If `act` were implemented as an async function, this whole block could\n      // be a single `await` call. That's really the only difference between\n      // this branch and the next one.\n      const thenable = ((result: any): Thenable<T>);\n\n      // Warn if the an `act` call with an async scope is not awaited. In a\n      // future release, consider making this an error.\n      queueSeveralMicrotasks(() => {\n        if (!didAwaitActCall && !didWarnNoAwaitAct) {\n          didWarnNoAwaitAct = true;\n          console.error(\n            'You called act(async () => ...) without await. ' +\n              'This could lead to unexpected testing behaviour, ' +\n              'interleaving multiple act calls and mixing their ' +\n              'scopes. ' +\n              'You should - await act(async () => ...);',\n          );\n        }\n      });\n\n      return {\n        then(resolve, reject) {\n          didAwaitActCall = true;\n          thenable.then(\n            returnValue => {\n              popActScope(prevActQueue, prevActScopeDepth);\n              if (prevActScopeDepth === 0) {\n                // We're exiting the outermost `act` scope. Flush the queue.\n                try {\n                  flushActQueue(queue);\n                  queueMacrotask(() =>\n                    // Recursively flush tasks scheduled by a microtask.\n                    recursivelyFlushAsyncActWork(returnValue, resolve, reject),\n                  );\n                } catch (error) {\n                  // `thenable` might not be a real promise, and `flushActQueue`\n                  // might throw, so we need to wrap `flushActQueue` in a\n                  // try/catch.\n                  reject(error);\n                }\n              } else {\n                resolve(returnValue);\n              }\n            },\n            error => {\n              popActScope(prevActQueue, prevActScopeDepth);\n              reject(error);\n            },\n          );\n        },\n      };\n    } else {\n      const returnValue: T = (result: any);\n      // The callback is not an async function. Exit the current\n      // scope immediately.\n      popActScope(prevActQueue, prevActScopeDepth);\n      if (prevActScopeDepth === 0) {\n        // We're exiting the outermost `act` scope. Flush the queue.\n        flushActQueue(queue);\n\n        // If the queue is not empty, it implies that we intentionally yielded\n        // to the main thread, because something suspended. We will continue\n        // in an asynchronous task.\n        //\n        // Warn if something suspends but the `act` call is not awaited.\n        // In a future release, consider making this an error.\n        if (queue.length !== 0) {\n          queueSeveralMicrotasks(() => {\n            if (!didAwaitActCall && !didWarnNoAwaitAct) {\n              didWarnNoAwaitAct = true;\n              console.error(\n                'A component suspended inside an `act` scope, but the ' +\n                  '`act` call was not awaited. When testing React ' +\n                  'components that depend on asynchronous data, you must ' +\n                  'await the result:\\n\\n' +\n                  'await act(() => ...)',\n              );\n            }\n          });\n        }\n\n        // Like many things in this module, this is next part is confusing.\n        //\n        // We do not currently require every `act` call that is passed a\n        // callback to be awaited, through arguably we should. Since this\n        // callback was synchronous, we need to exit the current scope before\n        // returning.\n        //\n        // However, if thenable we're about to return *is* awaited, we'll\n        // immediately restore the current scope. So it shouldn't observable.\n        //\n        // This doesn't affect the case where the scope callback is async,\n        // because we always require those calls to be awaited.\n        //\n        // TODO: In a future version, consider always requiring all `act` calls\n        // to be awaited, regardless of whether the callback is sync or async.\n        ReactCurrentActQueue.current = null;\n      }\n      return {\n        then(resolve, reject) {\n          didAwaitActCall = true;\n          if (prevActScopeDepth === 0) {\n            // If the `act` call is awaited, restore the queue we were\n            // using before (see long comment above) so we can flush it.\n            ReactCurrentActQueue.current = queue;\n            queueMacrotask(() =>\n              // Recursively flush tasks scheduled by a microtask.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject),\n            );\n          } else {\n            resolve(returnValue);\n          }\n        },\n      };\n    }\n  } else {\n    throw new Error('act(...) is not supported in production builds of React.');\n  }\n}\n\nfunction popActScope(prevActQueue, prevActScopeDepth) {\n  if (__DEV__) {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      console.error(\n        'You seem to have overlapping act() calls, this is not supported. ' +\n          'Be sure to await previous act() calls before making a new one. ',\n      );\n    }\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork<T>(\n  returnValue: T,\n  resolve: T => mixed,\n  reject: mixed => mixed,\n) {\n  if (__DEV__) {\n    // Check if any tasks were scheduled asynchronously.\n    const queue = ReactCurrentActQueue.current;\n    if (queue !== null) {\n      if (queue.length !== 0) {\n        // Async tasks were scheduled, mostly likely in a microtask.\n        // Keep flushing until there are no more.\n        try {\n          flushActQueue(queue);\n          // The work we just performed may have schedule additional async\n          // tasks. Wait a macrotask and check again.\n          queueMacrotask(() =>\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject),\n          );\n        } catch (error) {\n          // Leave remaining tasks on the queue if something throws.\n          reject(error);\n        }\n      } else {\n        // The queue is empty. We can finish.\n        ReactCurrentActQueue.current = null;\n        resolve(returnValue);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nlet isFlushing = false;\nfunction flushActQueue(queue) {\n  if (__DEV__) {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      let i = 0;\n      try {\n        for (; i < queue.length; i++) {\n          let callback: RendererTask = queue[i];\n          do {\n            ReactCurrentActQueue.didUsePromise = false;\n            const continuation = callback(false);\n            if (continuation !== null) {\n              if (ReactCurrentActQueue.didUsePromise) {\n                // The component just suspended. Yield to the main thread in\n                // case the promise is already resolved. If so, it will ping in\n                // a microtask and we can resume without unwinding the stack.\n                queue[i] = callback;\n                queue.splice(0, i);\n                return;\n              }\n              callback = continuation;\n            } else {\n              break;\n            }\n          } while (true);\n        }\n        // We flushed the entire queue.\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue.splice(0, i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\n// Some of our warnings attempt to detect if the `act` call is awaited by\n// checking in an asynchronous task. Wait a few microtasks before checking. The\n// only reason one isn't sufficient is we want to accommodate the case where an\n// `act` call is returned from an async function without first being awaited,\n// since that's a somewhat common pattern. If you do this too many times in a\n// nested sequence, you might get a warning, but you can always fix by awaiting\n// the call.\n//\n// A macrotask would also work (and is the fallback) but depending on the test\n// environment it may cause the warning to fire too late.\nconst queueSeveralMicrotasks =\n  typeof queueMicrotask === 'function'\n    ? callback => {\n        queueMicrotask(() => queueMicrotask(callback));\n      }\n    : queueMacrotask;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactVersion from 'shared/ReactVersion';\nimport {\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_CACHE_TYPE,\n  REACT_TRACING_MARKER_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {Component, PureComponent} from './ReactBaseClasses';\nimport {createRef} from './ReactCreateRef';\nimport {forEach, map, count, toArray, only} from './ReactChildren';\nimport {\n  createElement as createElementProd,\n  createFactory as createFactoryProd,\n  cloneElement as cloneElementProd,\n  isValidElement,\n} from './ReactElement';\nimport {createContext} from './ReactContext';\nimport {lazy} from './ReactLazy';\nimport {forwardRef} from './ReactForwardRef';\nimport {memo} from './ReactMemo';\nimport {cache} from './ReactCache';\nimport {\n  getCacheSignal,\n  getCacheForType,\n  useCallback,\n  useContext,\n  useEffect,\n  useEvent,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  useTransition,\n  useDeferredValue,\n  useId,\n  useCacheRefresh,\n  use,\n  useMemoCache,\n} from './ReactHooks';\nimport {\n  createElementWithValidation,\n  createFactoryWithValidation,\n  cloneElementWithValidation,\n} from './ReactElementValidator';\nimport {createServerContext} from './ReactServerContext';\nimport {createMutableSource} from './ReactMutableSource';\nimport ReactSharedInternals from './ReactSharedInternals';\nimport {startTransition} from './ReactStartTransition';\nimport {act} from './ReactAct';\n\n// TODO: Move this branching into the other module instead and just re-export.\nconst createElement: any = __DEV__\n  ? createElementWithValidation\n  : createElementProd;\nconst cloneElement: any = __DEV__\n  ? cloneElementWithValidation\n  : cloneElementProd;\nconst createFactory: any = __DEV__\n  ? createFactoryWithValidation\n  : createFactoryProd;\n\nconst Children = {\n  map,\n  forEach,\n  count,\n  toArray,\n  only,\n};\n\nexport {\n  Children,\n  createMutableSource,\n  createRef,\n  Component,\n  PureComponent,\n  createContext,\n  createServerContext,\n  forwardRef,\n  lazy,\n  memo,\n  cache,\n  useCallback,\n  useContext,\n  useEffect,\n  useEvent as experimental_useEvent,\n  useImperativeHandle,\n  useDebugValue,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useMutableSource,\n  useSyncExternalStore,\n  useReducer,\n  useRef,\n  useState,\n  REACT_FRAGMENT_TYPE as Fragment,\n  REACT_PROFILER_TYPE as Profiler,\n  REACT_STRICT_MODE_TYPE as StrictMode,\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\n  REACT_SUSPENSE_TYPE as Suspense,\n  createElement,\n  cloneElement,\n  isValidElement,\n  ReactVersion as version,\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  // Deprecated behind disableCreateFactory\n  createFactory,\n  // Concurrent Mode\n  useTransition,\n  startTransition,\n  useDeferredValue,\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\n  getCacheSignal as unstable_getCacheSignal,\n  getCacheForType as unstable_getCacheForType,\n  useCacheRefresh as unstable_useCacheRefresh,\n  REACT_CACHE_TYPE as unstable_Cache,\n  use,\n  useMemoCache as unstable_useMemoCache,\n  // enableScopeAPI\n  REACT_SCOPE_TYPE as unstable_Scope,\n  // enableTransitionTracing\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\n  useId,\n  act,\n};\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","warnNoop","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","Error","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","arguments","length","childArray","i","defaultProps","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentCache","UNTERMINATED","TERMINATED","ERRORED","createCacheRoot","WeakMap","createCacheNode","s","v","o","p","cache","fn","dispatcher","fnMap","getCacheForType","fnNode","get","cacheNode","set","l","arg","objectCache","objectNode","primitiveCache","Map","primitiveNode","terminatedNode","erroredNode","ReactCurrentDispatcher","resolveDispatcher","getCacheSignal","controller","AbortController","reason","abort","signal","resourceType","useContext","Context","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","use","usable","useMemoCache","size","useEvent","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createServerContext","globalName","wasDefined","startTransition","scope","options","prevTransition","act","__DEV__","createElementProd","cloneElementProd","createFactoryProd","Children","map","forEach","only"],"mappings":"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"}