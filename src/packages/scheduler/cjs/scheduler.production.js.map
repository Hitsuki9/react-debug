{"version":3,"file":"scheduler.production.js","sources":["../../../../packages/scheduler/src/SchedulerFeatureFlags.js","../../../../packages/scheduler/src/SchedulerMinHeap.js","../../../../packages/scheduler/src/SchedulerPriorities.js","../../../../packages/scheduler/src/SchedulerProfiling.js","../../../../packages/scheduler/src/forks/Scheduler.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nexport const enableSchedulerDebugging = false;\nexport const enableProfiling = false;\nexport const frameYieldMs = 5;\n\nexport const userBlockingPriorityTimeout = 250;\nexport const normalPriorityTimeout = 5000;\nexport const lowPriorityTimeout = 10000;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\ntype Heap<T: Node> = Array<T>;\ntype Node = {\n  id: number,\n  sortIndex: number,\n  ...\n};\n\nexport function push<T: Node>(heap: Heap<T>, node: T): void {\n  const index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\n\nexport function peek<T: Node>(heap: Heap<T>): T | null {\n  return heap.length === 0 ? null : heap[0];\n}\n\nexport function pop<T: Node>(heap: Heap<T>): T | null {\n  if (heap.length === 0) {\n    return null;\n  }\n  const first = heap[0];\n  const last = heap.pop();\n  if (last !== first) {\n    // $FlowFixMe[incompatible-type]\n    heap[0] = last;\n    // $FlowFixMe[incompatible-call]\n    siftDown(heap, last, 0);\n  }\n  return first;\n}\n\nfunction siftUp<T: Node>(heap: Heap<T>, node: T, i: number): void {\n  let index = i;\n  while (index > 0) {\n    const parentIndex = (index - 1) >>> 1;\n    const parent = heap[parentIndex];\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown<T: Node>(heap: Heap<T>, node: T, i: number): void {\n  let index = i;\n  const length = heap.length;\n  const halfLength = length >>> 1;\n  while (index < halfLength) {\n    const leftIndex = (index + 1) * 2 - 1;\n    const left = heap[leftIndex];\n    const rightIndex = leftIndex + 1;\n    const right = heap[rightIndex];\n\n    // If the left or right node is smaller, swap with the smaller of those.\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a: Node, b: Node) {\n  // Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from './SchedulerPriorities';\nimport {enableProfiling} from './SchedulerFeatureFlags';\n\nlet runIdCounter: number = 0;\nlet mainThreadIdCounter: number = 0;\n\n// Bytes per element is 4\nconst INITIAL_EVENT_LOG_SIZE = 131072;\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nlet eventLogSize = 0;\nlet eventLogBuffer = null;\nlet eventLog = null;\nlet eventLogIndex = 0;\n\nconst TaskStartEvent = 1;\nconst TaskCompleteEvent = 2;\nconst TaskErrorEvent = 3;\nconst TaskCancelEvent = 4;\nconst TaskRunEvent = 5;\nconst TaskYieldEvent = 6;\nconst SchedulerSuspendEvent = 7;\nconst SchedulerResumeEvent = 8;\n\nfunction logEvent(entries: Array<number | PriorityLevel>) {\n  if (eventLog !== null) {\n    const offset = eventLogIndex;\n    eventLogIndex += entries.length;\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\n            'forget to call `stopLoggingProfilingEvents()`.',\n        );\n        stopLoggingProfilingEvents();\n        return;\n      }\n      const newEventLog = new Int32Array(eventLogSize * 4);\n      // $FlowFixMe[incompatible-call] found when upgrading Flow\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n    eventLog.set(entries, offset);\n  }\n}\n\nexport function startLoggingProfilingEvents(): void {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\n\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\n  const buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\n\nexport function markTaskStart(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\n\nexport function markTaskCompleted(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskCanceled(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskErrored(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\n\nexport function markTaskRun(\n  task: {\n    id: number,\n    priorityLevel: PriorityLevel,\n    ...\n  },\n  ms: number,\n) {\n  if (enableProfiling) {\n    runIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerSuspended(ms: number) {\n  if (enableProfiling) {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\nexport function markSchedulerUnsuspended(ms: number) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-disable no-var */\n\nimport type {PriorityLevel} from '../SchedulerPriorities';\n\nimport {\n  enableSchedulerDebugging,\n  enableProfiling,\n  frameYieldMs,\n  userBlockingPriorityTimeout,\n  lowPriorityTimeout,\n  normalPriorityTimeout,\n} from '../SchedulerFeatureFlags';\n\nimport {push, pop, peek} from '../SchedulerMinHeap';\n\n// TODO: Use symbols?\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from '../SchedulerPriorities';\nimport {\n  markTaskRun,\n  markTaskYield,\n  markTaskCompleted,\n  markTaskCanceled,\n  markTaskErrored,\n  markSchedulerSuspended,\n  markSchedulerUnsuspended,\n  markTaskStart,\n  stopLoggingProfilingEvents,\n  startLoggingProfilingEvents,\n} from '../SchedulerProfiling';\n\nexport type Callback = boolean => ?Callback;\n\nexport opaque type Task = {\n  id: number,\n  callback: Callback | null,\n  priorityLevel: PriorityLevel,\n  startTime: number,\n  expirationTime: number,\n  sortIndex: number,\n  isQueued?: boolean,\n};\n\nlet getCurrentTime: () => number | DOMHighResTimeStamp;\nconst hasPerformanceNow =\n  // $FlowFixMe[method-unbinding]\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  const localPerformance = performance;\n  getCurrentTime = () => localPerformance.now();\n} else {\n  const localDate = Date;\n  const initialTime = localDate.now();\n  getCurrentTime = () => localDate.now() - initialTime;\n}\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nvar maxSigned31BitInt = 1073741823;\n\n// Tasks are stored on a min heap\nvar taskQueue: Array<Task> = [];\nvar timerQueue: Array<Task> = [];\n\n// Incrementing id counter. Used to maintain insertion order.\nvar taskIdCounter = 1;\n\n// Pausing the scheduler is useful for debugging.\nvar isSchedulerPaused = false;\n\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority;\n\n// This is set while performing work, to prevent re-entrance.\nvar isPerformingWork = false;\n\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\n// Capture local references to native APIs, in case a polyfill overrides them.\nconst localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nconst localClearTimeout =\n  typeof clearTimeout === 'function' ? clearTimeout : null;\nconst localSetImmediate =\n  typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nfunction advanceTimers(currentTime: number) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  let timer = peek(timerQueue);\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n      if (enableProfiling) {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime: number) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback();\n    } else {\n      const firstTimer = peek(timerQueue);\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(initialTime: number) {\n  if (enableProfiling) {\n    markSchedulerUnsuspended(initialTime);\n  }\n\n  // We'll need a host callback the next time work is scheduled.\n  isHostCallbackScheduled = false;\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  const previousPriorityLevel = currentPriorityLevel;\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          const currentTime = getCurrentTime();\n          // $FlowFixMe[incompatible-call] found when upgrading Flow\n          markTaskErrored(currentTask, currentTime);\n          // $FlowFixMe[incompatible-use] found when upgrading Flow\n          currentTask.isQueued = false;\n        }\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n    if (enableProfiling) {\n      const currentTime = getCurrentTime();\n      markSchedulerSuspended(currentTime);\n    }\n  }\n}\n\nfunction workLoop(initialTime: number) {\n  let currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n  while (\n    currentTask !== null &&\n    !(enableSchedulerDebugging && isSchedulerPaused)\n  ) {\n    if (currentTask.expirationTime > currentTime && shouldYieldToHost()) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n    // $FlowFixMe[incompatible-use] found when upgrading Flow\n    const callback = currentTask.callback;\n    if (typeof callback === 'function') {\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      currentTask.callback = null;\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      currentPriorityLevel = currentTask.priorityLevel;\n      // $FlowFixMe[incompatible-use] found when upgrading Flow\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      if (enableProfiling) {\n        // $FlowFixMe[incompatible-call] found when upgrading Flow\n        markTaskRun(currentTask, currentTime);\n      }\n      const continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n      if (typeof continuationCallback === 'function') {\n        // If a continuation is returned, immediately yield to the main thread\n        // regardless of how much time is left in the current time slice.\n        // $FlowFixMe[incompatible-use] found when upgrading Flow\n        currentTask.callback = continuationCallback;\n        if (enableProfiling) {\n          // $FlowFixMe[incompatible-call] found when upgrading Flow\n          markTaskYield(currentTask, currentTime);\n        }\n        advanceTimers(currentTime);\n        return true;\n      } else {\n        if (enableProfiling) {\n          // $FlowFixMe[incompatible-call] found when upgrading Flow\n          markTaskCompleted(currentTask, currentTime);\n          // $FlowFixMe[incompatible-use] found when upgrading Flow\n          currentTask.isQueued = false;\n        }\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n        advanceTimers(currentTime);\n      }\n    } else {\n      pop(taskQueue);\n    }\n    currentTask = peek(taskQueue);\n  }\n  // Return whether there's additional work\n  if (currentTask !== null) {\n    return true;\n  } else {\n    const firstTimer = peek(timerQueue);\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority<T>(\n  priorityLevel: PriorityLevel,\n  eventHandler: () => T,\n): T {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next<T>(eventHandler: () => T): T {\n  var priorityLevel;\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback<T: (...Array<mixed>) => mixed>(callback: T): T {\n  var parentPriorityLevel = currentPriorityLevel;\n  // $FlowFixMe[incompatible-return]\n  // $FlowFixMe[missing-this-annot]\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(\n  priorityLevel: PriorityLevel,\n  callback: Callback,\n  options?: {delay: number},\n): Task {\n  var currentTime = getCurrentTime();\n\n  var startTime;\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      // Times out immediately\n      timeout = -1;\n      break;\n    case UserBlockingPriority:\n      // Eventually times out\n      timeout = userBlockingPriorityTimeout;\n      break;\n    case IdlePriority:\n      // Never times out\n      timeout = maxSigned31BitInt;\n      break;\n    case LowPriority:\n      // Eventually times out\n      timeout = lowPriorityTimeout;\n      break;\n    case NormalPriority:\n    default:\n      // Eventually times out\n      timeout = normalPriorityTimeout;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n\n  var newTask: Task = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1,\n  };\n  if (enableProfiling) {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      }\n      // Schedule a timeout.\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    if (enableProfiling) {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    }\n    // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback();\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback();\n  }\n}\n\nfunction unstable_getFirstCallbackNode(): Task | null {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task: Task) {\n  if (enableProfiling) {\n    if (task.isQueued) {\n      const currentTime = getCurrentTime();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  }\n\n  // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel(): PriorityLevel {\n  return currentPriorityLevel;\n}\n\nlet isMessageLoopRunning = false;\nlet taskTimeoutID: TimeoutID = (-1: any);\n\n// Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\nlet frameInterval = frameYieldMs;\nlet startTime = -1;\n\nfunction shouldYieldToHost(): boolean {\n  const timeElapsed = getCurrentTime() - startTime;\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  }\n  // Yield now.\n  return true;\n}\n\nfunction requestPaint() {}\n\nfunction forceFrameRate(fps: number) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error'](\n      'forceFrameRate takes a positive int between 0 and 125, ' +\n        'forcing frame rates higher than 125 fps is not supported',\n    );\n    return;\n  }\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nconst performWorkUntilDeadline = () => {\n  if (isMessageLoopRunning) {\n    const currentTime = getCurrentTime();\n    // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n    startTime = currentTime;\n\n    // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `flushWork` errors, then `hasMoreWork` will\n    // remain true, and we'll continue the work loop.\n    let hasMoreWork = true;\n    try {\n      hasMoreWork = flushWork(currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n      }\n    }\n  }\n};\n\nlet schedulePerformWorkUntilDeadline;\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = () => {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  const channel = new MessageChannel();\n  const port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = () => {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = () => {\n    // $FlowFixMe[not-a-function] nullable value\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback() {\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(\n  callback: (currentTime: number) => void,\n  ms: number,\n) {\n  // $FlowFixMe[not-a-function] nullable value\n  taskTimeoutID = localSetTimeout(() => {\n    callback(getCurrentTime());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  // $FlowFixMe[not-a-function] nullable value\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = ((-1: any): TimeoutID);\n}\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_scheduleCallback,\n  unstable_cancelCallback,\n  unstable_wrapCallback,\n  unstable_getCurrentPriorityLevel,\n  shouldYieldToHost as unstable_shouldYield,\n  requestPaint as unstable_requestPaint,\n  unstable_continueExecution,\n  unstable_pauseExecution,\n  unstable_getFirstCallbackNode,\n  getCurrentTime as unstable_now,\n  forceFrameRate as unstable_forceFrameRate,\n};\n\nexport const unstable_Profiling: {\n  startLoggingProfilingEvents(): void,\n  stopLoggingProfilingEvents(): ArrayBuffer | null,\n} | null = enableProfiling\n  ? {\n      startLoggingProfilingEvents,\n      stopLoggingProfilingEvents,\n    }\n  : null;\n"],"names":["enableSchedulerDebugging","enableProfiling","frameYieldMs","userBlockingPriorityTimeout","normalPriorityTimeout","lowPriorityTimeout","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","getCurrentTime","hasPerformanceNow","performance","now","localPerformance","localDate","Date","initialTime","maxSigned31BitInt","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","firstTimer","requestHostTimeout","flushWork","cancelHostTimeout","previousPriorityLevel","workLoop","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","console","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_Profiling"],"mappings":"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"}