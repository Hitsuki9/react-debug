{"version":3,"file":"scheduler-unstable_post_task.production.js","sources":["../../../../packages/scheduler/src/SchedulerPriorities.js","../../../../packages/scheduler/src/forks/SchedulerPostTask.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\n\n// TODO: Use symbols?\nexport const NoPriority = 0;\nexport const ImmediatePriority = 1;\nexport const UserBlockingPriority = 2;\nexport const NormalPriority = 3;\nexport const LowPriority = 4;\nexport const IdlePriority = 5;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {PriorityLevel} from '../SchedulerPriorities';\n\ndeclare class TaskController {\n  constructor(options?: {priority?: string}): TaskController;\n  signal: mixed;\n  abort(): void;\n}\n\ntype PostTaskPriorityLevel = 'user-blocking' | 'user-visible' | 'background';\n\ntype CallbackNode = {\n  _controller: TaskController,\n};\n\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  NormalPriority,\n  LowPriority,\n  IdlePriority,\n} from '../SchedulerPriorities';\n\nexport {\n  ImmediatePriority as unstable_ImmediatePriority,\n  UserBlockingPriority as unstable_UserBlockingPriority,\n  NormalPriority as unstable_NormalPriority,\n  IdlePriority as unstable_IdlePriority,\n  LowPriority as unstable_LowPriority,\n};\n\n// Capture local references to native APIs, in case a polyfill overrides them.\nconst perf = window.performance;\nconst setTimeout = window.setTimeout;\n\n// Use experimental Chrome Scheduler postTask API.\nconst scheduler = global.scheduler;\n\nconst getCurrentTime: () => DOMHighResTimeStamp = perf.now.bind(perf);\n\nexport const unstable_now = getCurrentTime;\n\n// Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\nconst yieldInterval = 5;\nlet deadline = 0;\n\nlet currentPriorityLevel_DEPRECATED = NormalPriority;\n\n// Always yield at the end of the frame.\nexport function unstable_shouldYield(): boolean {\n  return getCurrentTime() >= deadline;\n}\n\nexport function unstable_requestPaint() {\n  // Since we yield every frame regardless, `requestPaint` has no effect.\n}\n\ntype SchedulerCallback<T> = (didTimeout_DEPRECATED: boolean) =>\n  | T\n  // May return a continuation\n  | SchedulerCallback<T>;\n\nexport function unstable_scheduleCallback<T>(\n  priorityLevel: PriorityLevel,\n  callback: SchedulerCallback<T>,\n  options?: {delay?: number},\n): CallbackNode {\n  let postTaskPriority;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n      postTaskPriority = 'user-blocking';\n      break;\n    case LowPriority:\n    case NormalPriority:\n      postTaskPriority = 'user-visible';\n      break;\n    case IdlePriority:\n      postTaskPriority = 'background';\n      break;\n    default:\n      postTaskPriority = 'user-visible';\n      break;\n  }\n\n  const controller = new TaskController({priority: postTaskPriority});\n  const postTaskOptions = {\n    delay: typeof options === 'object' && options !== null ? options.delay : 0,\n    signal: controller.signal,\n  };\n\n  const node = {\n    _controller: controller,\n  };\n\n  scheduler\n    .postTask(\n      runTask.bind(null, priorityLevel, postTaskPriority, node, callback),\n      postTaskOptions,\n    )\n    .catch(handleAbortError);\n\n  return node;\n}\n\nfunction runTask<T>(\n  priorityLevel: PriorityLevel,\n  postTaskPriority: PostTaskPriorityLevel,\n  node: CallbackNode,\n  callback: SchedulerCallback<T>,\n) {\n  deadline = getCurrentTime() + yieldInterval;\n  try {\n    currentPriorityLevel_DEPRECATED = priorityLevel;\n    const didTimeout_DEPRECATED = false;\n    const result = callback(didTimeout_DEPRECATED);\n    if (typeof result === 'function') {\n      // Assume this is a continuation\n      const continuation: SchedulerCallback<T> = (result: any);\n      const continuationOptions = {\n        signal: node._controller.signal,\n      };\n\n      const nextTask = runTask.bind(\n        null,\n        priorityLevel,\n        postTaskPriority,\n        node,\n        continuation,\n      );\n\n      if (scheduler.yield !== undefined) {\n        scheduler\n          .yield(continuationOptions)\n          .then(nextTask)\n          .catch(handleAbortError);\n      } else {\n        scheduler\n          .postTask(nextTask, continuationOptions)\n          .catch(handleAbortError);\n      }\n    }\n  } catch (error) {\n    // We're inside a `postTask` promise. If we don't handle this error, then it\n    // will trigger an \"Unhandled promise rejection\" error. We don't want that,\n    // but we do want the default error reporting behavior that normal\n    // (non-Promise) tasks get for unhandled errors.\n    //\n    // So we'll re-throw the error inside a regular browser task.\n    setTimeout(() => {\n      throw error;\n    });\n  } finally {\n    currentPriorityLevel_DEPRECATED = NormalPriority;\n  }\n}\n\nfunction handleAbortError(error: any) {\n  // Abort errors are an implementation detail. We don't expose the\n  // TaskController to the user, nor do we expose the promise that is returned\n  // from `postTask`. So we should suppress them, since there's no way for the\n  // user to handle them.\n}\n\nexport function unstable_cancelCallback(node: CallbackNode) {\n  const controller = node._controller;\n  controller.abort();\n}\n\nexport function unstable_runWithPriority<T>(\n  priorityLevel: PriorityLevel,\n  callback: () => T,\n): T {\n  const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\n  currentPriorityLevel_DEPRECATED = priorityLevel;\n  try {\n    return callback();\n  } finally {\n    currentPriorityLevel_DEPRECATED = previousPriorityLevel;\n  }\n}\n\nexport function unstable_getCurrentPriorityLevel(): PriorityLevel {\n  return currentPriorityLevel_DEPRECATED;\n}\n\nexport function unstable_next<T>(callback: () => T): T {\n  let priorityLevel;\n  switch (currentPriorityLevel_DEPRECATED) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel_DEPRECATED;\n      break;\n  }\n\n  const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\n  currentPriorityLevel_DEPRECATED = priorityLevel;\n  try {\n    return callback();\n  } finally {\n    currentPriorityLevel_DEPRECATED = previousPriorityLevel;\n  }\n}\n\nexport function unstable_wrapCallback<T>(callback: () => T): () => T {\n  const parentPriorityLevel = currentPriorityLevel_DEPRECATED;\n  return () => {\n    const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\n    currentPriorityLevel_DEPRECATED = parentPriorityLevel;\n    try {\n      return callback();\n    } finally {\n      currentPriorityLevel_DEPRECATED = previousPriorityLevel;\n    }\n  };\n}\n\nexport function unstable_forceFrameRate() {}\n\nexport function unstable_pauseExecution() {}\n\nexport function unstable_continueExecution() {}\n\nexport function unstable_getFirstCallbackNode(): null {\n  return null;\n}\n\n// Currently no profiling build\nexport const unstable_Profiling = null;\n"],"names":["ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","perf","window","performance","setTimeout","scheduler","global","getCurrentTime","now","bind","unstable_now","yieldInterval","deadline","currentPriorityLevel_DEPRECATED","unstable_shouldYield","unstable_requestPaint","unstable_scheduleCallback","priorityLevel","callback","options","postTaskPriority","controller","TaskController","priority","postTaskOptions","delay","signal","node","_controller","postTask","runTask","catch","handleAbortError","didTimeout_DEPRECATED","result","continuation","continuationOptions","nextTask","yield","undefined","then","error","unstable_cancelCallback","abort","unstable_runWithPriority","previousPriorityLevel","unstable_getCurrentPriorityLevel","unstable_next","unstable_wrapCallback","parentPriorityLevel","unstable_forceFrameRate","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_Profiling"],"mappings":"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"}